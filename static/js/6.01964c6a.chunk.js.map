{"version":3,"sources":["ui/Container.js","ui/Content.js","ui/Heading.js","ui/Paragraph.js","ui/Button.js","schemas/index.js","components/CustomDropDown.js","ui/Constant.js","components/CustomButton.js","pages/BackPageOfMakeReservation.js","components/FlippingCard.js","pages/MakeReservation.js"],"names":["__webpack_require__","d","__webpack_exports__","Container","styled_components__WEBPACK_IMPORTED_MODULE_0__","headerBg","css","weekSpecialBg","herosectionBg","aboutBg","headingSectionBg","makeReservationBg","makeReservationBgTop","makeReservationBgBottom","confirmReservationBg","menuBg","helperBg","footerBg","loginBg","styled","div","props","as","type","Content","Heading","additionalStyles","h1","Paragraph","fontSize","small","medium","large","xlarge","xxlarge","xxxlarge","nameSize","extraLarge","fontWeight","regular","bold","deepBold","fontFamily","karla","karlaText","sanSerif","serif","markazi","color","black","red","deepGreen","yellow","pureWhite","p","withConfig","shouldForwardProp","prop","includes","defaultProps","Button","backgroundColor","button","$fontSize","$fontWeight","$textColor","$backgroundColor","makeReservationSchemas","Yup","shape","date","required","dinner","time","occasion","oneOf","firstName","lastName","email","tel","matches","countryCode","textArea","SelectContainer","SelectStyled","select","SelectDivStyled","OptionStyled","option","CustomDropdown","_ref","value","options","toggleOptions","$showOptions","currentID","dispatch","ind","handleChange","selectRef","useRef","typeofDD","selectChangeHandler","e","payload","target","React","createElement","Fragment","ref","onChange","onClick","name","map","index","key","LASTINPUTID","CustomSelectContainer","ButtonContainer","CustomButtonStyledContainer","_ref2","errors","_ref3","ButtonLabel","label","CustomRenderInputContent","_ref4","DateInput","input","RenderSpanText","span","RotatingSpan","_ref5","_ref6","CustomButton","_ref7","handleBlur","content","formSubmitted","values","showOptions","setShowOptions","useState","currentOption","setCurrentOption","dateRef","onShowPicker","current","showPicker","dateChangeHandler","formattedDate","Date","toLocaleDateString","year","month","day","id","prevShow","btn","i","beforeIcon","afterIcon","inputType","placeholder","onBlur","GenaralInputsContainer","EachInputContainer","LabelInput","InputWrapper","error","Input","space","itemId","MakeReservationDataContainer","MakeReservationData","EachMakeReservationData","IconSpan","TextSpan","ButtonSelected","TextAreaContainer","TextAreaStyled","textarea","LeftBackCard","touched","dataArr","turnCardHandler","cardLeftInput","filter","makeReservationArr","icon","FaCalendar","style","text","IoPersonOutline","LuAlarmClock","LiaGlassCheersSolid","GeneralInputsContainer","arr","SummaryOfSelectTags","RightBackCard","cardRightInput","_ref8","data","seating","_ref9","selectOptns","htmlFor","IoMdStar","optn","countryAbbrev","country","code","CardFace","FrontCardLeft","FrontCardRight","BackCardLeft","BackCardRight","ReservationCard","turn","CardLeft","CardRight","FlexedCard","MakeReservationStyled","Form","form","RadioButton","Radiolabel","RadioInput","RadioSpan","BottomContainerStyled","SelectedmenuImageStyled","SelectedmenuImageContainer","MenusContainer","$empty","$next","Headingtext","HidetheRightRadio","ShowtheRightRadio","BottomBtnsContainer","CartContainer","MakeReservation","setTurn","state","resetHandler","setContent","setFormSubmitted","menus","selectedMenuHandler","isAnyItemSelected","setremount","setUserBookedData","setMenus","useCombinedContexts","useEffect","prevContent","item","formik","useFormik","initialValues","validationSchema","validateOnBlur","validateOnChange","onSubmit","async","setSubmitting","validateForm","Object","keys","length","toast","success","prevData","menuArr","console","entries","forEach","_ref10","field","message","handleSubmit","isSubmitting","handleFieldChange","open","orderArray","flatMap","category","generalName","list","menu","selected","image","src","alt","cardLeftCards","customSelect","cardRightCards","preventDefault","checked","Boolean","TiShoppingCart","disabled","Link","to"],"mappings":"yFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAGA,MAAMK,EAAWC;;;;;EAQXC,EAAgBD;;;;;;;;EAWhBE,EAAgBF;;;;;;;;;;EAYhBG,EAAUH;;;;;;;;;;;;EAaVI,EAAmBJ;;;;;;EASnBK,EAAoBL;;;;;;;;;;EAWpBM,EAAuBN;;;;;;;EAQvBO,EAA0BP;;;;;;;;;;EAa1BQ,EAAuBR;;;;;;;;;EAWvBS,EAAST;;;;;;;;;;;;EAcTU,EAAWV;;;;;;EAQXW,EAAWX;;;;;;;EAUXY,EAAUZ;;;EAIHH,EAAYgB,IAAOC;;;;IAI3BC,GACY,WAAbA,EAAMC,IACNhB;QACID;;;IAGHgB,GACY,YAAbA,EAAMC,IACS,aAAfD,EAAME,MACNjB;QACIE;;;;IAIHa,GACY,YAAbA,EAAMC,IACS,UAAfD,EAAME,MACNjB;QACIG;;;;EAILY,GACc,QAAbA,EAAMC,IACS,uBAAfD,EAAME,MACNjB;QACII;;;;MAIDW,GACU,YAAbA,EAAMC,IACS,oBAAfD,EAAME,MACNjB;QACIK;;;;;MAKDU,GACU,QAAbA,EAAMC,IACS,uBAAfD,EAAME,MACNjB;QACIM;;;MAGDS,GACU,QAAbA,EAAMC,IACS,0BAAfD,EAAME,MACNjB;QACIO;;;;MAIDQ,GACU,YAAbA,EAAMC,IACS,uBAAfD,EAAME,MACNjB;QACIQ;;;;OAIAO,GACS,YAAbA,EAAMC,IACS,SAAfD,EAAME,MACNjB;QACIS;;;;MAIDM,GACU,QAAbA,EAAMC,IACS,WAAfD,EAAME,MACNjB;QACIU;;;MAGDK,GACU,YAAbA,EAAMC,IACS,SAAfD,EAAME,MACNjB;QACIC;;;MAGDc,GACU,WAAbA,EAAMC,IACNhB;QACIW;;;;MAIDI,GACU,YAAbA,EAAMC,IACS,UAAfD,EAAME,MACNjB;QACIY;;mCC1ORlB,EAAAC,EAAAC,EAAA,sBAAAsB,IAEO,MAAMA,EAFbxB,EAAA,GAEuBmB,EAAOC;;;;;;;;;;;;;;;mCCF9BpB,EAAAC,EAAAC,EAAA,sBAAAuB,IAAA,IAAArB,EAAAJ,EAAA,GACA,MAAM0B,EAAmBpB;;EAIZmB,EAAUN,IAAOQ;IACzBN,GACY,OAAbA,EAAMC,IACNhB;;;;;;;;;IASCe,GACY,OAAbA,EAAMC,IACNhB;;;;;IAKCe,GACY,OAAbA,EAAMC,IACNhB;;;;;;IAMCe,GACY,OAAbA,EAAMC,IACNhB;;;;;;MAMGe,GACU,OAAbA,EAAMC,IACNhB;;;;;;MAMGe,GACU,OAAbA,EAAMC,IACNhB;;;;;;;IAOAoB;mCCzDJ1B,EAAAC,EAAAC,EAAA,sBAAA0B,IAAA,IAAAxB,EAAAJ,EAAA,GAEA,MAAM6B,EAAW,CACfC,MAAOxB;;IAGPyB,OAAQzB;;IAGR0B,MAAO1B;;IAGP2B,OAAQ3B;;;IAIR4B,QAAS5B;;IAGT6B,SAAU7B;;;;IAKV8B,SAAU9B;;;IAIV+B,WAAY/B;;;;;;;KAURgC,EAAa,CACjBC,QAASjC;;IAGTyB,OAAQzB;;IAGRkC,KAAMlC;;IAGNmC,SAAUnC;;KAKNoC,EAAa,CACjBC,MAAOrC;;IAGPsC,UAAWtC;;IAGXuC,SAAUvC;;IAGVwC,MAAOxC;;IAGPyC,QAASzC;;KAKL0C,EAAQ,CACZC,MAAO3C;;IAGP4C,IAAK5C;;IAGL6C,UAAW7C;;IAGX8C,OAAQ9C;;IAGR+C,UAAW/C;;KAKAsB,EAAYT,IAAOmC,EAAEC,WAAW,CAC3CC,kBAAoBC,IACjB,CAAC,WAAY,aAAc,QAAS,cAAcC,SAASD;IAE3DpC,GAAUQ,EAASR,EAAMQ;IACzBR,GAAUiB,EAAWjB,EAAMiB;IAC3BjB,GAAU2B,EAAM3B,EAAM2B;IACtB3B,GAAUqB,EAAWrB,EAAMqB;EAGhCd,EAAU+B,aAAe,CACvBX,MAAO,YACPV,WAAY,UACZT,SAAU,QACVa,WAAY,0CCvGd1C,EAAAC,EAAAC,EAAA,sBAAA0D,IAAA,IAAAxD,EAAAJ,EAAA,GAEA,MAAM6B,EAAW,CACfC,MAAOxB;;;IAIPyB,OAAQzB;;;IAIR0B,MAAO1B;;;IAIP2B,OAAQ3B;;;KAMJgC,EAAa,CACjBC,QAASjC;;IAGTyB,OAAQzB;;IAGRkC,KAAMlC;;IAGNmC,SAAUnC;;KAKN0C,EAAQ,CACZC,MAAO3C;;;;;IAMP6C,UAAW7C;;IAGX8C,OAAQ9C;;IAGR+C,UAAW/C;;KAKPuD,EAAkB,CACtBZ,MAAO3C;;IAGP6C,UAAW7C;;IAGX8C,OAAQ9C;;;;;;;IAQR+C,UAAW/C;;KAIAsD,EAASzC,IAAO2C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA+BxBzC,GAAUQ,EAASR,EAAM0C,WAAa;IACtC1C,GAAUiB,EAAWjB,EAAM2C,aAAe;IAC1C3C,GAAU2B,EAAM3B,EAAM4C,YAAc;IACpC5C,GAAUwC,EAAgBxC,EAAM6C,kBAAoB;;;;;6FCzGlD,MAAMC,EAAyBC,MAAaC,MAAM,CACvDC,KAAMF,MAAaG,SAAS,oBAC5BC,OAAQJ,MAAaG,SAAS,gCAC9BE,KAAML,MAAaG,SAAS,oBAC5BG,SAAUN,MACPO,MACC,CAAC,WAAY,cAAe,aAAc,SAC1C,oBAEDJ,SAAS,wBACZK,UAAWR,MAAaG,SAAS,0BACjCM,SAAUT,MAAaG,SAAS,yBAChCO,MAAOV,MAAaU,MAAM,iBAAiBP,SAAS,qBACpDQ,IAAKX,MACFY,QAAQ,QAAS,oCACjBT,SAAS,4BACZU,YAAab,MAAaG,SAAS,4BACnCW,SAAUd,oCCfZ,MAAMe,EAAkBhE,IAAOC;;;;;EAOzBgE,EAAejE,IAAOkE;;;;;;;;;;EAYtBC,EAAkBnE,IAAOC;;;;;;;;;;;;;;EAgBzBmE,EAAepE,IAAOqE;;;;;;;;;;;;;EAmEbC,MApDf,SAAuBC,GASpB,IATqBC,MACtBA,EAAKC,QACLA,EAAOC,cACPA,EAAaC,aACbA,EAAYC,UACZA,EAASC,SACTA,EAAQC,IACRA,EAAGC,aACHA,GACDR,EACC,MAAMS,EAAYC,iBAAO,MACnBC,EAAW,CAAC,OAAQ,OAAQ,WAAY,UAExCC,EAAuBC,IAC3B,MAAMhF,EAAO8E,EAASN,GACtBG,EAAaK,GACbP,EAAS,CAAEzE,KAAMA,EAAMiF,QAASD,EAAEE,OAAOd,QACzCE,KAGF,OACEa,IAAAC,cAACxB,EAAe,KACduB,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACvB,EAAY,CACXyB,IAAKV,EACLW,SAAUR,EACVX,MAAOA,EACPoB,QAASlB,EACTmB,KAAMX,EAASN,GACfD,aAAcA,IAEfA,GACCY,IAAAC,cAACrB,EAAe,KACbM,EAAQqB,IAAI,CAACzB,EAAQ0B,IACpBR,IAAAC,cAACpB,EAAY,CACX4B,OAAQd,EAASJ,KAAOiB,IACxBH,QAASA,IACPT,EAAoB,CAClBG,OAAQ,CAAEO,KAAMX,EAASN,GAAYJ,MAAOH,MAI/CA,QChGV,MAAM4B,EAAc,ECMrBC,EAAwBlG,IAAOC;;;;;;;;;;;;EAc/BkG,EAAkBnG,IAAOC;;;;;;;;;;;EAazBmG,EAA8BpG,IAAOC;;;;;sBAKrBsE,IAAA,IAACC,MAAEA,GAAOD,EAAA,OAC5BC,EAAQ,mBAAqB;;;;;YAKrB6B,IAAA,IAACC,OAAEA,GAAQD,EAAA,OAAMC,EAAS,gBAAkB;;gBAExCC,IAAA,IAAC/B,MAAEA,GAAO+B,EAAA,OAAM/B,ED7CF,2PC6C2B;;;EAKnDgC,EAAcxG,IAAOyG;;;EAKrBC,EAA2B1G,IAAOC;;;;;;;;;;;WAW7B0G,IAAA,IAACnC,MAAEA,GAAOmC,EAAA,OAAMnC,EAAQ,mBAAqB;EAGlDoC,EAAY5G,IAAO6G;;;;;;;;;;;;;;;EAiBnBC,EAAiB9G,IAAO+G;;;;;EAMxBC,EAAehH,IAAO+G;;;eAGbE,IAAA,IAACzC,MAAEA,GAAOyC,EAAA,OAAMzC,EAAQ,iBAAmB;gBAC1C0C,IAAA,IAAC1C,MAAEA,GAAO0C,EAAA,OAAM1C,EAAQ,QAAU;;EAyGnC2C,MArGMC,IAQf,IARgBC,WACpBA,EAAUtC,aACVA,EAAYuB,OACZA,EAAMzB,SACNA,EAAQyC,QACRA,EAAOC,cACPA,EAAaC,OACbA,GACDJ,EACC,MAAOK,EAAaC,GAAkBC,oBAAS,IACxCC,EAAeC,GAAoBF,mBAAS,MAE7CG,EAAU7C,iBAAO,MAEjB8C,EAAeA,KACnBD,EAAQE,QAAQC,cAGZC,EAAqB9C,IACzB,MACM+C,EADe,IAAIC,KAAKhD,EAAEE,OAAOd,OACJ6D,mBAAmB,QAAS,CAC7DC,KAAM,UACNC,MAAO,OACPC,IAAK,YAEPzD,EAAaK,GACbP,EAAS,CAAEzE,KAAM,OAAQiF,QAAS8C,KAG9BzD,EAAiB+D,IACrBZ,EAAiBY,GACjBf,EAAgBgB,GAAcd,IAAkBa,IAAaC,IAG/D,OACEnD,IAAAC,cAACU,EAAqB,KACnBoB,EAAQxB,IAAI,CAAC6C,EAAKC,KACjB,MAAMC,WACJA,EAAUrE,MACVA,EAAKsE,UACLA,EAASrC,MACTA,EAAKsC,UACLA,EAAStE,QACTA,EAAOG,UACPA,EAASiB,KACTA,EAAImD,YACJA,GACEL,EACJ,OACEpD,IAAAC,cAACW,EAAe,CAACH,IAAK4C,GACpBrD,IAAAC,cAACgB,EAAW,KAAEC,GACdlB,IAAAC,cAACY,EAA2B,CAC1BE,OAAQA,EAAOT,IAAS0B,EACxB/C,MAA4B,KAArBgD,EAAOmB,EAAI9C,OAEH,UAAdkD,EACCxD,IAAAC,cAACoB,EAAS,CACRxG,KAAK,OACLyF,KAAK,OACLmD,YAAaA,EACbtD,IAAKoC,EACLlC,QAASmC,EACTvD,MAAOgD,EAAOmB,EAAI9C,MAClBF,SAAUuC,EACVe,OAAQ5B,IAGV9B,IAAAC,cAAClB,EAAc,CACbQ,IAAK8D,EACLnE,QAASA,EACTD,MAAOgD,EAAOmB,EAAI9C,MAClBjB,UAAWA,EACXD,aAAc8C,GAAeG,IAAkBhD,EAC/CF,cAAeA,IAAMA,EAAcE,GACnCC,SAAUA,EACVE,aAAcA,IAGlBQ,IAAAC,cAACkB,EAAwB,CACvBlC,MAAOA,IAAUwE,EACjBpD,QAASlB,GAETa,IAAAC,cAAA,YAAOqD,GACPtD,IAAAC,cAACsB,EAAc,KAAEtC,GACjBe,IAAAC,cAACwB,EAAY,CAACxC,MAAOgD,EAAOmB,EAAI9C,OAC7BiD,KAINxC,EAAOT,IAAS0B,GACfhC,IAAAC,cAAC/E,IAAS,CAACoB,MAAM,MAAMnB,SAAS,SAC7B4F,EAAOT,yDCpLxB,MAAMqD,EAAyBlJ,IAAOC;;;;;;;EAQhCkJ,EAAqBnJ,IAAOC;;;;EAK5BmJ,EAAapJ,IAAOyG;;;;EAKpB4C,EAAerJ,IAAOC;;;;;;;;YAQhBsE,IAAA,IAAC+E,MAAEA,GAAO/E,EAAA,OAAM+E,EAAQ,gBAAkB;EAEhDC,EAAQvJ,IAAO6G,MAAMzE,WAAW,CACpCC,kBAAoBC,GAAkB,UAATA;;;aAIlB+D,IAAA,IAACmD,MAAEA,GAAOnD,EAAA,OAAMmD,EAAQ,eAAiB;;;;;;WAM3CjD,IAAA,IAACkD,OAAEA,GAAQlD,EAAA,OAAMkD,IAAWxD,EAAc,MAAQ;iBAC5CU,IAAA,IAAC8C,OAAEA,GAAQ9C,EAAA,OAAM8C,IAAWxD,EAAc,MAAQ;;;;;;;;;;EA4D7DhC,EAAejE,IAAOkE;;;;;;;;;;;;;;;EAgBtBE,EAAepE,IAAOqE;;;;;;EAStBqF,EAA+B1J,IAAOC;;;;;;;EAStC0J,EAAsB3J,IAAOC;;;;;;;EAQ7B2J,EAA0B5J,IAAOC;;;;;;;;;YAS3BgH,IAAA,IAACqC,MAAEA,GAAOrC,EAAA,OAAMqC,EAAQ,gBAAkB;;EAGhDO,EAAW7J,IAAO+G;;;;;EAMlB+C,EAAW9J,IAAO+G;;;EAIlBgD,EAAiB/J,IAAOC;;;;;EAMxB+J,EAAoBhK,IAAOC;;;EAI3BgK,EAAiBjK,IAAOkK;;;;;EAOvB,SAASC,EAAYjD,GAQzB,IAR0BM,OAC3BA,EAAMzC,aACNA,EAAYuB,OACZA,EAAM8D,QACNA,EAAOC,QACPA,EAAOC,gBACPA,EAAe/C,cACfA,GACDL,EACC,MAAMqD,EAAgBF,EAAQG,OAC3B3D,GAAuB,cAAbA,EAAM4B,IAAmC,UAAb5B,EAAM4B,IAGzCgC,EAAqB,CACzB,CACEC,KAAMnF,IAAAC,cAACmF,IAAU,CAACC,MAAO,CAAElK,SAAU,SAAUmB,MAAO,aACtDgJ,KAAMrD,EAAOrE,MAAQ,cACrBsF,GAAI,OACJ5C,KAAM,QAER,CACE6E,KACEnF,IAAAC,cAACsF,IAAe,CAACF,MAAO,CAAElK,SAAU,SAAUmB,MAAO,aAEvDgJ,KAAMrD,EAAOnE,QAAU,gBACvBoF,GAAI,SACJ5C,KAAM,UAER,CACE6E,KAAMnF,IAAAC,cAACuF,IAAY,CAACH,MAAO,CAAElK,SAAU,SAAUmB,MAAO,aACxDgJ,KAAMrD,EAAOlE,MAAQ,cACrBmF,GAAI,OACJ5C,KAAM,QAER,CACE6E,KACEnF,IAAAC,cAACwF,IAAmB,CAACJ,MAAO,CAAElK,SAAU,SAAUmB,MAAO,aAE3DgJ,KAAMrD,EAAOjE,UAAY,WACzBkF,GAAI,WACJ5C,KAAM,aAIV,OACEN,IAAAC,cAAA,WACED,IAAAC,cAACyF,EACC,CACAC,IAAKX,EACLjE,OAAQA,EACR8D,QAASA,EACT5C,OAAQA,EACRzC,aAAcA,EACdwC,cAAeA,IAEjBhC,IAAAC,cAAC2F,EACC,CACAV,mBAAoBA,EACpBjD,OAAQA,EACRlB,OAAQA,EACRgE,gBAAiBA,EACjB/C,cAAeA,KAMhB,SAAS6D,EAAahE,GAQ1B,IAR2BI,OAC5BA,EAAMzC,aACNA,EAAYuB,OACZA,EAAM8D,QACNA,EAAOC,QACPA,EAAOhD,WACPA,EAAUE,cACVA,GACDH,EACC,MAEMiE,EAAiBhB,EAAQG,OAC5B3D,GAAuB,cAAbA,EAAM4B,IAAmC,UAAb5B,EAAM4B,IAE/C,OACElD,IAAAC,cAAA,WACED,IAAAC,cAACyF,EAAsB,CACrBC,IAAKG,EACL/E,OAAQA,EACR8D,QAASA,EACT5C,OAAQA,EACRzC,aAAcA,EACdsC,WAAYA,EACZE,cAAeA,IAGjBhC,IAAAC,cAACwE,EAAiB,KAChBzE,IAAAC,cAAC4D,EAAU,KAlBa,oBAmBxB7D,IAAAC,cAACyE,EAAc,CACbxB,GAAG,WACH5C,KAAK,WACLF,SAAUZ,EACVP,MAAOgD,EAAiB,SACxByB,OAAQ5B,IAEV9B,IAAAC,cAAA,cAYR,SAAS2F,EAAmBG,GAMzB,IAN0BhB,gBAC3BA,EAAeG,mBACfA,EAAkBjD,OAClBA,EAAMlB,OACNA,EAAMiB,cACNA,GACD+D,EACC,OACE/F,IAAAC,cAACkE,EAA4B,KAC3BnE,IAAAC,cAACmE,EAAmB,KACjBc,EAAmB3E,IAAKyF,IACvB,MAAMb,KAAEA,EAAIG,KAAEA,EAAIpC,GAAEA,EAAE5C,KAAEA,GAAS0F,EAEjC,OACEhG,IAAAC,cAACoE,EAAuB,CACtB5D,IAAKyC,EACLa,MAAOhD,EAAOT,IAAS0B,EACvB3B,QAAS0E,GAET/E,IAAAC,cAACqE,EAAQ,KAAEa,GACXnF,IAAAC,cAACsE,EAAQ,KAAEe,OAKnBtF,IAAAC,cAACuE,EAAc,QAAKvC,EAAOgE,oBAKjC,SAASP,EAAsBQ,GAO5B,IAP6BP,IAC9BA,EAAG5E,OACHA,EAAM8D,QACNA,EAAO5C,OACPA,EAAMzC,aACNA,EAAYwC,cACZA,GACDkE,EACC,OACElG,IAAAC,cAAC0D,EAAsB,KACpBgC,EAAIpF,IAAI,CAACe,EAAO+B,KACf,MAAMH,GAAEA,EAAEM,UAAEA,EAAStC,MAAEA,EAAKgD,OAAEA,EAAMiC,YAAEA,EAAW1C,YAAEA,GACjDnC,EACF,OACEtB,IAAAC,cAAC2D,EAAkB,CAACnD,IAAK4C,GACvBrD,IAAAC,cAAC4D,EAAU,CAACuC,QAASlD,GACnBlD,IAAAC,cAACoG,IAAQ,CACPhB,MAAO,CACLlK,SAAU,SACVmB,MAAO,sBAGV4E,GAGHlB,IAAAC,cAAC6D,EAAY,CAACC,MAAOhD,EAAOmC,IAAO2B,EAAQ3B,IACxCgB,IAAWxD,GACVV,IAAAC,cAACvB,EAAY,CACXwE,GAAI,cACJjE,MAAOgD,EAAO1D,YACd6B,SAAUZ,GAET2G,EAAY5F,IAAK+F,IAChB,MAAMC,cAAEA,EAAaC,QAAEA,EAAOC,KAAEA,GAASH,EACzC,OAEEtG,IAAAC,cAACpB,EAAY,CAACI,MAAOwH,EAAMhG,IAAK+F,GAC7BD,MAMXvG,IAAAC,cAAC+D,EAAK,CACJnJ,KAAM2I,EACNU,OAAQA,EACRhB,GAAIA,EACJ5C,KAAM4C,EACNO,YAAaA,EACbxE,MAAOgD,EAAOiB,GACd9C,SAAUZ,EACVyE,MAAOC,IAAWxD,KAGrBK,EAAOmC,IAAO2B,EAAQ3B,IAAOlB,GAC5BhC,IAAAC,cAAC/E,IAAS,CAACoB,MAAM,MAAMnB,SAAS,SAC7B4F,EAAOmC,QCtYjB,MAAMwD,EAAWjM,IAAOC;;;;;;;;;;EAalBiM,GAAgBlM,YAAOiM,KACvBE,GAAiBnM,YAAOiM,KACxBG,GAAepM,YAAOiM,KACtBI,GAAgBrM,YAAOiM,KAGvBK,GAAkBtM,IAAOC,IAAImC,WAAW,CACnDC,kBAAoBC,IAAU,CAAC,QAAQC,SAASD;;;;;;;;;MAU5C4J;iBACW3H,IAAA,IAACgI,KAAEA,GAAMhI,EAAA,OAAMgI,EAAO,kBAAoB;;;MAGrDJ;iBACW9F,IAAA,IAACkG,KAAEA,GAAMlG,EAAA,OAAMkG,EAAO,mBAAqB;;;MAGtDH;iBACW7F,IAAA,IAACgG,KAAEA,GAAMhG,EAAA,OAAMgG,EAAO,gBAAkB;;;MAGnDF;iBACW1F,IAAA,IAAC4F,KAAEA,GAAM5F,EAAA,OAAM4F,EAAO,gBAAkB;;EAK5CC,GAAWxM,IAAOC;;;;;;EASlBwM,GAAYzM,IAAOC;;;;;;EASnByM,GAAa1M,IAAOC;;;;;;;8DCUjC,MAAM0M,GAAwB3M,IAAOC;;;;;;EAS/B2M,GAAO5M,IAAO6M;;;;EAOdC,GAAc9M,IAAOC;;;;;;;;;;;;;;EAiBrB8M,GAAa/M,IAAOyG;;;;;;;;;;;;;;;;EAmBpBuG,GAAahN,IAAO6G;;;;;gBAKVkG;;;EAMVE,GAAYjN,IAAO+G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAuCnBmG,GAAwBlN,IAAOC;;;;;;;;;;;;;;;;EAmB/BkN,GAA0BnN,IAAOC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+DjCmN,GAA6BpN,IAAOC;;;;;;;;;WAS/BsE,IAAA,IAACwB,MAAEA,GAAOxB,EAAA,OAAa,EAARwB;aACbM,IAAA,IAACN,MAAEA,GAAOM,EAAA,OAAa,EAARN;;;;;;;;;;;;mBAYTQ,IAAA,IAACR,MAAEA,GAAOQ,EAAA,OAAa,EAARR;;EAG5BsH,GAAiBrN,IAAOC;;YAElB0G,IAAA,IAAC2G,OAAEA,GAAQ3G,EAAA,OAAM2G,EAAS,QAAU;;;;;;YAMpCF;;;;EAMNjH,GAAkBnG,IAAOC;cACjBgH,IAAA,IAACsG,MAAEA,GAAOtG,EAAA,OAAMsG,EAAQ,WAAa;YACvCrG,IAAA,IAACqG,MAAEA,GAAOrG,EAAA,OAAMqG,EAAQ,OAAS;UACnCnG,IAAA,IAACmG,MAAEA,GAAOnG,EAAA,OAAMmG,EAAQ,MAAQ;eAC3BjC,IAAA,IAACiC,MAAEA,GAAOjC,EAAA,OAAMiC,EAAQ,uBAAyB;;;;;;;EAS1DC,GAAcxN,IAAOC;;EAIrBwN,GAAoBzN,IAAOC;;;;;;EAQ3ByN,GAAoB1N,IAAOC;;;;;EAO3B0N,GAAsB3N,IAAOC;;;;;;;;;EAU7B2N,GAAgB5N,IAAOC;;;;;;;;;;EAohBd4N,UAxgBf,WACE,MAAOtB,EAAMuB,GAAWnG,oBAAS,IAC3BoG,MACJA,EAAKlJ,SACLA,EAAQmJ,aACRA,EAAYC,WACZA,EAAU3G,QACVA,EAAOC,cACPA,EAAa2G,iBACbA,EAAgBC,MAEhBA,EAAKC,oBACLA,EAAmBC,kBACnBA,EAAiBC,WACjBA,EAAUC,kBACVA,EAAiBC,SAEjBA,GACEC,eAwBJC,oBAAU,KACRT,EAAYU,GACVA,EAAY7I,IAAK8I,IAAI,IAChBA,EACHpK,MAAOuJ,EAAMa,EAAK/I,OAAS+I,EAAK5F,iBAInC,CAAC+E,EAAOE,EAAYK,IAEvB,MAAMO,EAASC,YAAU,CACvBC,cAAehB,EACfiB,iBAAkBhM,EAClBiM,gBAAgB,EAChBC,kBAAkB,EAClBC,SAAUC,MAAO5H,EAAMiE,KAAwB,IAAtB4D,cAAEA,GAAe5D,EACxC,MAAMnF,EAASuI,EAAOS,aAAa9H,GAEnC,GAAmC,IAA/B+H,OAAOC,KAAKlJ,GAAQmJ,OACtB,IACEC,KAAMC,QAAQ,+CAEdpB,EAAmBqB,GAAa,IAAIA,EAAUpI,IAC9C0G,GAAiB,GACjBF,IACAQ,EAASqB,MAET,MAAOvG,GACPwG,QAAQxG,MAAM,gCAAiCA,GAC/CoG,KAAMpG,MAAM,gDAGdiG,OAAOQ,QAAQzJ,GAAQ0J,QAAQC,IAAA,IAAEC,EAAOC,GAAQF,EAAA,OAC9CP,KAAMpG,SAAS4G,MAAUC,OAE3BjC,GAAiB,GAGnBmB,GAAc,OAKZ/I,OAAEA,EAAMe,WAAEA,EAAU+I,aAAEA,EAAYhG,QAAEA,EAAO5C,OAAEA,EAAM6I,aAAEA,GACzDxB,EAEIyB,EAAqBlL,IACzB,MAAMS,KAAEA,EAAIrB,MAAEA,GAAUY,EAAEE,OAC1BT,EAAS,CAAEzE,KAAMyF,EAAMR,QAASb,IAChCqK,EAAO9J,aAAaK,GACpB8I,GAAiB,IAEb5D,EAAkBA,KACtBwD,EAASyC,IAAUA,IAEflG,EAAU,CACd,CACE5D,MAAO,aACPgC,GAAI,YACJM,UAAW,OACXC,YAAa,aAEf,CACEvC,MAAO,YACPgC,GAAI,WACJM,UAAW,OACXC,YAAa,UAEf,CACEvC,MAAO,QACPgC,GAAI,QACJM,UAAW,QACXC,YAAa,gCAEf,CACEvC,MAAO,eACPgC,GAAI,MACJM,UAAW,MACXC,YAAa,aACb0C,YAAa,CACX,CAAEM,KAAM,OAAQF,cAAe,KAAMC,QAAS,WAC9C,CACEC,KAAM,KACNF,cAAe,KACfC,QAAS,4BAEX,CAAEC,KAAM,MAAOF,cAAe,KAAMC,QAAS,SAC7C,CAAEC,KAAM,MAAOF,cAAe,KAAMC,QAAS,iBAC7C,CAAEC,KAAM,MAAOF,cAAe,KAAMC,QAAS,YAK7CyE,EACJrC,EACGsC,QAASC,IACR,MAAMC,YAAEA,EAAWC,KAAEA,GAASF,EAC9B,OAAOE,EAAK9K,IAAK+K,IAAI,IAAWA,EAAMF,mBAEvCnG,OAAQoE,GAASA,EAAKkC,UACtBhL,IAAI,CAAC+K,EAAMjI,KACV,MAAMH,GAAEA,EAAEkI,YAAEA,EAAWI,MAAEA,EAAKlL,KAAEA,GAASgL,EACzC,OACEtL,IAAAC,cAAC4H,GAA0B,CAACrH,MAAO6C,EAAG5C,IAAKyC,GACzClD,IAAAC,cAAC2H,GAAuB,KACtB5H,IAAAC,cAAA,OAAKwL,IAAKD,EAAOE,IAAKpL,IACtBN,IAAAC,cAAA,QAAMI,QAASA,IAAMwI,EAAoB3F,EAAIkI,IAAc,UAM7D,GAEJO,EAAgB5J,EAAQkD,OAC3B2G,GACuB,SAAtBA,EAAatL,MAAyC,aAAtBsL,EAAatL,MAG3CuL,EAAiB9J,EAAQkD,OAC5B2G,GACuB,WAAtBA,EAAatL,MAA2C,SAAtBsL,EAAatL,MAGnD,OACEN,IAAAC,cAACxG,IAAS,CAACmB,GAAG,UAAUC,KAAK,mBAC3BmF,IAAAC,cAACxG,IAAS,CAACmB,GAAG,MAAMC,KAAK,sBACvBmF,IAAAC,cAACnF,IAAO,KACNkF,IAAAC,cAACgI,GAAW,KACVjI,IAAAC,cAAClF,KAAO,CAACH,GAAG,MAAK,mBAIvBoF,IAAAC,cAACoH,GAAI,CACHuC,SAAW/J,IACTA,EAAEiM,iBACFjB,EAAahL,GACb8I,GAAiB,GAEbqB,OAAOC,KAAKlJ,GAAQmJ,QACtBF,OAAOC,KAAKlJ,GAAQ0J,QAASE,IAC3BR,KAAMpG,MAAMhD,EAAO4J,QAKzB3K,IAAAC,cAACxG,IAAS,CAACmB,GAAG,MAAMC,KAAK,sBACvBmF,IAAAC,cAACnF,IAAO,KACNkF,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACmH,GAAqB,KACpBpH,IAAAC,cAACkH,GAAU,KACTnH,IAAAC,cAACgH,GAAQ,KACPjH,IAAAC,cAAC8G,GAAe,CAACC,KAAMA,GACrBhH,IAAAC,cAAC0G,GAAa,KACZ3G,IAAAC,cAACkI,GAAiB,KAChBnI,IAAAC,cAACsH,GAAW,KACVvH,IAAAC,cAACwH,GAAU,CACT5M,KAAK,QACLyF,KAAK,UACL4C,GAAG,UACHjE,MAAM,UACN8M,QAA4B,YAAnB9J,EAAOgE,QAChB7F,SAAU2K,EACVrH,OAAQ5B,IAEV9B,IAAAC,cAACuH,GAAU,CAACpB,QAAQ,WAAU,mBACZpG,IAAAC,cAACyH,GAAS,OAE3B3G,EAAOkF,SACNpB,EAAQoB,SACRjE,GACEhC,IAAAC,cAAC/E,IAAS,CAACC,SAAS,QAAQmB,MAAM,OAC/ByE,EAAOkF,WAMlBjG,IAAAC,cAACsH,GAAW,KACVvH,IAAAC,cAACwH,GAAU,CACT5M,KAAK,QACLyF,KAAK,UACL4C,GAAG,SACHjE,MAAM,SACN8M,QAA4B,WAAnB9J,EAAOgE,QAChB7F,SAAU2K,EACVrH,OAAQ5B,IAEV9B,IAAAC,cAACuH,GAAU,CAACpB,QAAQ,UAAS,kBACZpG,IAAAC,cAACyH,GAAS,OAE1B3G,EAAOkF,SACNpB,EAAQoB,SACRjE,GACEhC,IAAAC,cAAC/E,IAAS,CAACC,SAAS,QAAQmB,MAAM,OAC/ByE,EAAOkF,UAKhBjG,IAAAC,cAAC2B,EAAY,CACXE,WAAYA,EACZtC,aAAcuL,EACdhK,OAAQA,EACRzB,SAAUA,EACVyC,QAAS4J,EACT3J,cAAeA,EACfC,OAAQA,KAGZjC,IAAAC,cAAC4G,GAAY,KACX7G,IAAAC,cAAC2E,EAAY,CACX3C,OAAQA,EACRzC,aAAcuL,EACdhK,OAAQA,EACR8D,QAASA,EACTmC,KAAMA,EACNlC,QAASA,EACTC,gBAAiBA,EACjB/C,cAAeA,OAMvBhC,IAAAC,cAACiH,GAAS,KACRlH,IAAAC,cAAC8G,GAAe,CAACC,KAAMA,GACrBhH,IAAAC,cAAC2G,GAAc,KACb5G,IAAAC,cAACiI,GAAiB,KAChBlI,IAAAC,cAACsH,GAAW,KACVvH,IAAAC,cAACwH,GAAU,CACT5M,KAAK,QACLyF,KAAK,UACL4C,GAAG,UACHjE,MAAM,UACN8M,QAA4B,YAAnB9J,EAAOgE,QAChB7F,SAAU2K,EACVrH,OAAQ5B,IAEV9B,IAAAC,cAACuH,GAAU,CAACpB,QAAQ,WAAU,mBACZpG,IAAAC,cAACyH,GAAS,OAE3B3G,EAAOkF,SACNpB,EAAQoB,SACRjE,GACEhC,IAAAC,cAAC/E,IAAS,CAACC,SAAS,QAAQmB,MAAM,OAC/ByE,EAAOkF,WAMlBjG,IAAAC,cAAC2B,EAAY,CACXE,WAAYA,EACZtC,aAAcuL,EACdhK,OAAQA,EACRzB,SAAUA,EACVyC,QAAS8J,EACT7J,cAAeA,EACfC,OAAQA,KAGZjC,IAAAC,cAAC6G,GAAa,KACZ9G,IAAAC,cAAC4F,EAAa,CACZ5D,OAAQA,EACRzC,aAAcuL,EACdhK,OAAQA,EACR8D,QAASA,EACTmC,KAAMA,EACNlC,QAASA,EACThD,WAAYA,EACZE,cAAeA,UAuI7BhC,IAAAC,cAACW,GAAe,CAACoH,MAAOgE,QAAQhF,IAC9BhH,IAAAC,cAAC/C,IAAM,CACLK,WAAW,YACXC,iBAAiB,YACjB3C,KAAK,SACLwF,QAAS0E,GACV,eAOP/E,IAAAC,cAACxG,IAAS,CAACmB,GAAG,MAAMC,KAAK,yBACvBmF,IAAAC,cAACnF,IAAO,KACNkF,IAAAC,cAAC0H,GAAqB,KACnBsD,EAAWf,OAAS,GACnBlK,IAAAC,cAAC/E,IAAS,CACRoB,MAAM,YACNN,WAAW,UACXJ,WAAW,WACXT,SAAS,YAER8P,EAAWf,OAAQ,IACG,IAAtBe,EAAWf,OAAe,OAAS,QAAS,IACtB,IAAtBe,EAAWf,OAAe,KAAO,MAAM,cAG5ClK,IAAAC,cAAC6H,GAAc,CAACC,OAAQkD,EAAWf,QACV,IAAtBe,EAAWf,OACVlK,IAAAC,cAACoI,GAAa,KACZrI,IAAAC,cAACgM,IAAc,CACb5G,MAAO,CAAElK,SAAU,OAAQmB,MAAO,sBAEpC0D,IAAAC,cAAC/E,IAAS,CACRoB,MAAM,YACNN,WAAW,UACXJ,WAAW,WACXT,SAAS,YACV,0BAOH6E,IAAAC,cAAA,WAAMgL,IAGVjL,IAAAC,cAACmI,GAAmB,KAClBpI,IAAAC,cAACW,GAAe,KACbkI,EAAkBoB,OACjBlK,IAAAC,cAAC/C,IAAM,CAACgP,SAAUpB,EAAcjQ,KAAK,UAAS,uBAI9CmF,IAAAC,cAACkM,KAAI,CAACC,GAAG,gBACPpM,IAAAC,cAAC/C,IAAM,CAACgP,SAAUpB,EAAcjQ,KAAK,UAAS","file":"static/js/6.01964c6a.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\n// HEADER\r\nconst headerBg = css`\r\n  position: fixed;\r\n  top: 0;\r\n  background-color: var(--white);\r\n  z-index: 99;\r\n`;\r\n\r\n//WEEK SPECIAL\r\nconst weekSpecialBg = css`\r\n  background-color: var(--pureWhite);\r\n  padding-bottom: 3rem;\r\n  margin-top: 20rem;\r\n\r\n  @media (max-width: 450px) {\r\n    margin-top: 10rem;\r\n  }\r\n`;\r\n\r\n// HOMEPAGE\r\nconst herosectionBg = css`\r\n  position: relative;\r\n  top: 8rem;\r\n  height: auto;\r\n  background-color: var(--deepGreen);\r\n  /* height: 27rem; */\r\n\r\n  @media (max-width: 450px) {\r\n    top: 7rem;\r\n  }\r\n`;\r\n//About\r\nconst aboutBg = css`\r\n  position: relative;\r\n  width: 100%;\r\n  top: 10rem;\r\n  background-color: var(--pureWhite);\r\n  @media (max-width: 950px) {\r\n    top: 8rem;\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    top: 7rem;\r\n  }\r\n`;\r\nconst headingSectionBg = css`\r\n  background-color: var(--deepGreen);\r\n\r\n  @media (max-width: 450px) {\r\n    margin-top: 3rem;\r\n  }\r\n`;\r\n\r\n//MAKE RESERVATION\r\nconst makeReservationBg = css`\r\n  position: relative;\r\n  height: auto;\r\n  top: 10rem;\r\n  background-color: var(--pureWhite);\r\n  padding-bottom: 5rem;\r\n\r\n  @media (max-width: 450px) {\r\n    top: 7rem;\r\n  }\r\n`;\r\nconst makeReservationBgTop = css`\r\n  position: relative;\r\n  height: auto;\r\n  background-color: var(--deepGreen);\r\n\r\n  @media (max-width: 450px) {\r\n  }\r\n`;\r\nconst makeReservationBgBottom = css`\r\n  position: relative;\r\n  height: auto;\r\n  margin-top: 5rem;\r\n  background-color: var(--pureWhite);\r\n  margin-bottom: 5rem;\r\n\r\n  @media (max-width: 450px) {\r\n    margin-top: 4rem;\r\n  }\r\n`;\r\n\r\n//CONFIRM RESERVATION\r\nconst confirmReservationBg = css`\r\n  position: relative;\r\n  /* top: 8rem; */\r\n  height: auto;\r\n  background-color: var(--deepGreen);\r\n\r\n  @media (max-width: 450px) {\r\n    /* top: 7rem; */\r\n  }\r\n`;\r\n// Menu\r\nconst menuBg = css`\r\n  position: relative;\r\n  top: 8rem;\r\n  padding-top: 4rem;\r\n  height: auto;\r\n  background-color: var(--deepGreen);\r\n  padding-bottom: 10rem;\r\n\r\n  @media (max-width: 450px) {\r\n    top: 10rem;\r\n    padding-bottom: 10rem;\r\n  }\r\n`;\r\n// HELPER\r\nconst helperBg = css`\r\n  position: relative;\r\n  background-color: var(--pureWhite);\r\n  bottom: 0;\r\n  /* top: 3rem; */\r\n  padding-top: 3rem;\r\n`;\r\n// Footer\r\nconst footerBg = css`\r\n  position: relative;\r\n  bottom: 0;\r\n  /* top: 10rem; */\r\n  background-color: var(--black);\r\n  height: auto;\r\n  padding: 4rem 0;\r\n`;\r\n\r\n// Login\r\nconst loginBg = css`\r\n  position: relative;\r\n  background-color: var(--pureWhite);\r\n`;\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n\r\n  /* HEADER */\r\n  ${(props) =>\r\n    props.as === \"header\" &&\r\n    css`\r\n      ${headerBg}\r\n    `}\r\n  /* HOMEPAGE */\r\n  ${(props) =>\r\n    props.as === \"section\" &&\r\n    props.type === \"homepage\" &&\r\n    css`\r\n      ${herosectionBg}\r\n    `}\r\n\r\n     /* ABOUT */\r\n  ${(props) =>\r\n    props.as === \"section\" &&\r\n    props.type === \"about\" &&\r\n    css`\r\n      ${aboutBg}\r\n    `}\r\n\r\n/* ReservationText */\r\n${(props) =>\r\n    props.as === \"div\" &&\r\n    props.type === \"reservationHeading\" &&\r\n    css`\r\n      ${headingSectionBg}\r\n    `}\r\n\r\n    /* Make RESERVATION */\r\n    ${(props) =>\r\n    props.as === \"section\" &&\r\n    props.type === \"makeReservation\" &&\r\n    css`\r\n      ${makeReservationBg}\r\n    `}\r\n\r\n\r\n    /* TOP */\r\n    ${(props) =>\r\n    props.as === \"div\" &&\r\n    props.type === \"makeReservationTop\" &&\r\n    css`\r\n      ${makeReservationBgTop}\r\n    `}\r\n/* BOTTOM */\r\n    ${(props) =>\r\n    props.as === \"div\" &&\r\n    props.type === \"makeReservationBottom\" &&\r\n    css`\r\n      ${makeReservationBgBottom}\r\n    `}\r\n\r\n    /* Confirm RESERVATION */\r\n    ${(props) =>\r\n    props.as === \"section\" &&\r\n    props.type === \"confirmReservation\" &&\r\n    css`\r\n      ${confirmReservationBg}\r\n    `}\r\n\r\n     /* Menu */\r\n     ${(props) =>\r\n    props.as === \"section\" &&\r\n    props.type === \"menu\" &&\r\n    css`\r\n      ${menuBg}\r\n    `}\r\n\r\n    /* HElper */\r\n    ${(props) =>\r\n    props.as === \"div\" &&\r\n    props.type === \"helper\" &&\r\n    css`\r\n      ${helperBg}\r\n    `}\r\n/* WEEK SPECIAL */\r\n    ${(props) =>\r\n    props.as === \"section\" &&\r\n    props.type === \"week\" &&\r\n    css`\r\n      ${weekSpecialBg}\r\n    `}\r\n/* FOOTER */\r\n    ${(props) =>\r\n    props.as === \"footer\" &&\r\n    css`\r\n      ${footerBg}\r\n    `}\r\n\r\n    /* Login */\r\n    ${(props) =>\r\n    props.as === \"section\" &&\r\n    props.type === \"login\" &&\r\n    css`\r\n      ${loginBg}\r\n    `}\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Content = styled.div`\r\n  position: relative;\r\n  max-width: 120rem;\r\n  height: auto;\r\n  padding: 0 10.4rem 2rem;\r\n  margin: 0 auto;\r\n  @media (max-width: 950px) {\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    padding: 2rem 4rem;\r\n  }\r\n  @media (max-width: 450px) {\r\n    padding: 2rem 2rem;\r\n    border: none;\r\n  }\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\nconst additionalStyles = css`\r\n  text-align: left;\r\n`;\r\n\r\nexport const Heading = styled.h1`\r\n  ${(props) =>\r\n    props.as === \"h1\" &&\r\n    css`\r\n      font-size: 38px;\r\n      color: var(--yellow);\r\n      text-align: center;\r\n      @media (max-width: 450px) {\r\n        font-size: 24px;\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.as === \"h2\" &&\r\n    css`\r\n      font-size: 32px;\r\n      color: var(--black);\r\n    `}\r\n  \r\n  ${(props) =>\r\n    props.as === \"h3\" &&\r\n    css`\r\n      font-size: 28px;\r\n      color: var(--pure-white);\r\n      margin-top: -1rem;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.as === \"h4\" &&\r\n    css`\r\n      font-size: 20px;\r\n      color: var(--pureWhite);\r\n      font-weight: var(--bold);\r\n      font-family: var(--karla);\r\n    `} \r\n    ${(props) =>\r\n    props.as === \"h5\" &&\r\n    css`\r\n      font-size: 24px;\r\n      color: var(--deepGreen);\r\n      font-weight: var(--bold);\r\n      font-family: var(--karla);\r\n    `} \r\n    ${(props) =>\r\n    props.as === \"h6\" &&\r\n    css`\r\n      font-size: 20px;\r\n      color: var(--yellow);\r\n      font-weight: var(--bold);\r\n      font-style: italic;\r\n    `} \r\n\r\n  ${additionalStyles}\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst fontSize = {\r\n  small: css`\r\n    font-size: 1.2rem;\r\n  `,\r\n  medium: css`\r\n    font-size: 1.4rem;\r\n  `,\r\n  large: css`\r\n    font-size: 1.6rem;\r\n  `,\r\n  xlarge: css`\r\n    font-size: 1.8rem;\r\n    /* font-style: italic; */\r\n  `,\r\n  xxlarge: css`\r\n    font-size: 2rem;\r\n  `,\r\n  xxxlarge: css`\r\n    font-size: 2.8rem;\r\n    font-style: italic;\r\n    text-align: center;\r\n  `,\r\n  nameSize: css`\r\n    font-size: 2.8rem;\r\n    font-style: italic;\r\n  `,\r\n  extraLarge: css`\r\n    font-size: 4rem;\r\n\r\n    @media (max-width: 450px) {\r\n      font-size: 3.5rem;\r\n      white-space: nowrap;\r\n    }\r\n  `,\r\n};\r\n\r\nconst fontWeight = {\r\n  regular: css`\r\n    font-weight: var(--regular);\r\n  `,\r\n  medium: css`\r\n    font-weight: var(--medium);\r\n  `,\r\n  bold: css`\r\n    font-weight: var(--bold);\r\n  `,\r\n  deepBold: css`\r\n    font-weight: var(--deepBold);\r\n  `,\r\n};\r\n\r\nconst fontFamily = {\r\n  karla: css`\r\n    font-family: var(--karla);\r\n  `,\r\n  karlaText: css`\r\n    font-family: var(--karla);\r\n  `,\r\n  sanSerif: css`\r\n    font-family: \"sans-serif\";\r\n  `,\r\n  serif: css`\r\n    font-family: \"serif\";\r\n  `,\r\n  markazi: css`\r\n    font-family: var(--markazi);\r\n  `,\r\n};\r\n\r\nconst color = {\r\n  black: css`\r\n    color: var(--black);\r\n  `,\r\n  red: css`\r\n    color: red;\r\n  `,\r\n  deepGreen: css`\r\n    color: var(--deepGreen);\r\n  `,\r\n  yellow: css`\r\n    color: var(--yellow);\r\n  `,\r\n  pureWhite: css`\r\n    color: var(--pureWhite);\r\n  `,\r\n};\r\n\r\nexport const Paragraph = styled.p.withConfig({\r\n  shouldForwardProp: (prop) =>\r\n    ![\"fontSize\", \"fontWeight\", \"color\", \"fontFamily\"].includes(prop),\r\n})`\r\n  ${(props) => fontSize[props.fontSize]}\r\n  ${(props) => fontWeight[props.fontWeight]}\r\n  ${(props) => color[props.color]}\r\n  ${(props) => fontFamily[props.fontFamily]}\r\n`;\r\n\r\nParagraph.defaultProps = {\r\n  color: \"pureWhite\",\r\n  fontWeight: \"regular\",\r\n  fontSize: \"large\",\r\n  fontFamily: \"serif\",\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst fontSize = {\r\n  small: css`\r\n    font-size: 1.2rem;\r\n    padding: 0.4rem 0.8rem;\r\n  `,\r\n  medium: css`\r\n    font-size: 1.4rem;\r\n    padding: 1.2rem 1.6rem;\r\n  `,\r\n  large: css`\r\n    font-size: 1.6rem;\r\n    padding: 1.2rem 2.4rem;\r\n  `,\r\n  xlarge: css`\r\n    font-size: 1.8rem;\r\n    padding: 1.2rem 2.4rem;\r\n  `,\r\n};\r\n\r\nconst fontWeight = {\r\n  regular: css`\r\n    font-weight: var(--regular);\r\n  `,\r\n  medium: css`\r\n    font-weight: var(--medium);\r\n  `,\r\n  bold: css`\r\n    font-weight: var(--bold);\r\n  `,\r\n  deepBold: css`\r\n    font-weight: var(--deepBold);\r\n  `,\r\n};\r\n\r\nconst color = {\r\n  black: css`\r\n    color: var(--black);\r\n    &:hover {\r\n      color: var(--pureWhite);\r\n    }\r\n  `,\r\n  deepGreen: css`\r\n    color: var(--deepGreen);\r\n  `,\r\n  yellow: css`\r\n    color: var(--yellow);\r\n  `,\r\n  pureWhite: css`\r\n    color: var(--pureWhite);\r\n  `,\r\n};\r\n\r\nconst backgroundColor = {\r\n  black: css`\r\n    background-color: var(--black);\r\n  `,\r\n  deepGreen: css`\r\n    background-color: var(--deepGreen);\r\n  `,\r\n  yellow: css`\r\n    background-color: var(--yellow);\r\n    &:hover {\r\n      background-color: var(--deepGreen);\r\n      transform: translateY(-3px);\r\n      box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);\r\n    }\r\n  `,\r\n  pureWhite: css`\r\n    background-color: var(--pureWhite);\r\n  `,\r\n};\r\nexport const Button = styled.button`\r\n  position: relative;\r\n  font-family: var(--markazi);\r\n  border-radius: var(--border-radius-md);\r\n  transition: all 0.2s;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  white-space: nowrap;\r\n\r\n  &:active,\r\n  &:focus {\r\n    outline: none;\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    display: inline-block;\r\n    height: 100%;\r\n    width: 100%;\r\n    border-radius: var(--border-radius-md);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: -1;\r\n    transition: all 0.4s;\r\n    /* border: 1px solid var(--deepGreen); */\r\n  }\r\n\r\n  ${(props) => fontSize[props.$fontSize || \"xlarge\"]}\r\n  ${(props) => fontWeight[props.$fontWeight || \"bold\"]}\r\n  ${(props) => color[props.$textColor || \"black\"]}\r\n  ${(props) => backgroundColor[props.$backgroundColor || \"yellow\"]}\r\n  \r\n  @media (max-width: 450px) {\r\n    border-radius: var(--border-radius-xlg);\r\n  }\r\n`;\r\n\r\n// import styled, { css } from \"styled-components\";\r\n\r\n// const fontSize = {\r\n//   small: css`\r\n//     font-size: 1.2rem;\r\n//     padding: 0.4rem 0.8rem;\r\n//   `,\r\n//   medium: css`\r\n//     font-size: 1.4rem;\r\n//     padding: 1.2rem 1.6rem;\r\n//   `,\r\n//   large: css`\r\n//     font-size: 1.6rem;\r\n//     padding: 1.2rem 2.4rem;\r\n//   `,\r\n//   xlarge: css`\r\n//     font-size: 1.8rem;\r\n//     padding: 1.2rem 2.4rem;\r\n//   `,\r\n// };\r\n\r\n// const fontWeight = {\r\n//   regular: css`\r\n//     font-weight: var(--regular);\r\n//   `,\r\n//   medium: css`\r\n//     font-weight: var(--medium);\r\n//   `,\r\n//   bold: css`\r\n//     font-weight: var(--bold);\r\n//   `,\r\n//   deepBold: css`\r\n//     font-weight: var(--deepBold);\r\n//   `,\r\n// };\r\n\r\n// const color = {\r\n//   black: css`\r\n//     color: var(--black);\r\n//     &:hover {\r\n//       color: var(--pureWhite);\r\n//     }\r\n//   `,\r\n//   deepGreen: css`\r\n//     color: var(--deepGreen);\r\n//   `,\r\n//   yellow: css`\r\n//     color: var(--yellow);\r\n//   `,\r\n//   pureWhite: css`\r\n//     color: var(--pureWhite);\r\n//   `,\r\n// };\r\n\r\n// const backgroundColor = {\r\n//   black: css`\r\n//     background-color: var(--black);\r\n//   `,\r\n//   deepGreen: css`\r\n//     background-color: var(--deepGreen);\r\n//   `,\r\n//   yellow: css`\r\n//     background-color: var(--yellow);\r\n//     &:hover {\r\n//       background-color: var(--deepGreen);\r\n//       transform: translateY(-3px);\r\n//       box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);\r\n//     }\r\n//   `,\r\n//   pureWhite: css`\r\n//     background-color: var(--pureWhite);\r\n//   `,\r\n// };\r\n\r\n// export const Button = styled.button`\r\n//   position: relative;\r\n//   font-family: var(--markazi);\r\n//   border-radius: var(--border-radius-md);\r\n//   transition: all 0.2s;\r\n//   border: none;\r\n//   cursor: pointer;\r\n//   display: inline-block;\r\n\r\n//   &:active,\r\n//   &:focus {\r\n//     outline: none;\r\n//     transform: translateY(-1px);\r\n//     box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);\r\n//   }\r\n\r\n//   &::after {\r\n//     content: \"\";\r\n//     display: inline-block;\r\n//     height: 100%;\r\n//     width: 100%;\r\n//     border-radius: var(--border-radius-md);\r\n//     position: absolute;\r\n//     top: 0;\r\n//     left: 0;\r\n//     z-index: -1;\r\n//     transition: all 0.4s;\r\n//     border: 1px solid var(--deepGreen);\r\n//   }\r\n\r\n//   ${(props) => fontSize[props.$fontSize]}\r\n//   ${(props) => fontWeight[props.$fontWeight]}\r\n//   ${(props) => color[props.$textColor]}\r\n//   ${(props) => backgroundColor[props.$backgroundColor]}\r\n\r\n//   @media (max-width: 450px) {\r\n//     border-radius: var(--border-radius-xlg);\r\n//   }\r\n// `;\r\n\r\n// Button.defaultProps = {\r\n//   $textColor: \"black\",\r\n//   $backgroundColor: \"yellow\",\r\n//   $fontWeight: \"bold\",\r\n//   $fontSize: \"xlarge\",\r\n// };\r\n\r\n// import styled, { css } from \"styled-components\";\r\n\r\n// const fontSize = {\r\n//   small: css`\r\n//     font-size: 1.2rem;\r\n//     padding: 0.4rem 0.8rem;\r\n//   `,\r\n//   medium: css`\r\n//     font-size: 1.4rem;\r\n//     padding: 1.2rem 1.6rem;\r\n//   `,\r\n//   large: css`\r\n//     font-size: 1.6rem;\r\n//     padding: 1.2rem 2.4rem;\r\n//   `,\r\n//   xlarge: css`\r\n//     font-size: 1.8rem;\r\n//     padding: 1.2rem 2.4rem;\r\n//   `,\r\n// };\r\n\r\n// const fontWeight = {\r\n//   regular: css`\r\n//     font-weight: var(--regular);\r\n//   `,\r\n//   medium: css`\r\n//     font-weight: var(--medium);\r\n//   `,\r\n//   bold: css`\r\n//     font-weight: var(--bold);\r\n//   `,\r\n//   deepBold: css`\r\n//     font-weight: var(--deepBold);\r\n//   `,\r\n// };\r\n\r\n// const color = {\r\n//   black: css`\r\n//     color: var(--black);\r\n//     &:hover {\r\n//       color: var(--pureWhite);\r\n//     }\r\n//   `,\r\n//   deepGreen: css`\r\n//     color: var(--deepGreen);\r\n//   `,\r\n//   yellow: css`\r\n//     color: var(--yellow);\r\n//   `,\r\n//   pureWhite: css`\r\n//     color: var(--pureWhite);\r\n//   `,\r\n// };\r\n\r\n// const backgroundColor = {\r\n//   black: css`\r\n//     background-color: var(--black);\r\n//   `,\r\n//   deepGreen: css`\r\n//     background-color: var(--deepGreen);\r\n//   `,\r\n//   yellow: css`\r\n//     background-color: var(--yellow);\r\n//     &:hover {\r\n//       background-color: var(--deepGreen);\r\n//       transform: translateY(-3px);\r\n//       box-shadow: 0 1rem 2rem rgba(black, 0.2);\r\n//       /* margin-left: 3rem; */\r\n\r\n//       &::after {\r\n//         transform: scaleX(1.4) scaleY(1.6);\r\n//         opacity: 0;\r\n//         padding: 0.5rem;\r\n//       }\r\n//     }\r\n//   `,\r\n//   pureWhite: css`\r\n//     background-color: var(--pureWhite);\r\n//   `,\r\n// };\r\n\r\n// export const Button = styled.button`\r\n//   position: relative;\r\n//   /* width: 15rem; */\r\n//   font-family: var(--markazi);\r\n//   border-radius: var(--border-radius-md);\r\n//   transition: all 0.2s;\r\n//   border: none;\r\n//   cursor: pointer;\r\n//   display: inline-block;\r\n\r\n//   &:active,\r\n//   &:focus {\r\n//     outline: none;\r\n//     transform: translateY(-1px);\r\n//     box-shadow: 0 0.5rem 1rem rgba(black, 0.2);\r\n//   }\r\n\r\n//   &::after {\r\n//     content: \"\";\r\n//     display: inline-block;\r\n//     height: 100%;\r\n//     width: 100%;\r\n//     border-radius: var(--border-radius-md);\r\n//     position: absolute;\r\n//     top: 0;\r\n//     left: 0;\r\n//     z-index: -1;\r\n//     transition: all 0.4s;\r\n//     border: 1px solid var(--deepGreen);\r\n//   }\r\n\r\n//   /*  */\r\n//   ${(props) => fontSize[props.fontSize]}\r\n//   ${(props) => fontWeight[props.fontWeight]}\r\n//   ${(props) => color[props.textColor]}\r\n//   ${(props) => backgroundColor[props.backgroundColor]}\r\n\r\n//   @media (max-width: 450px) {\r\n//     border-radius: var(--border-radius-xlg);\r\n//   }\r\n// `;\r\n\r\n// Button.defaultProps = {\r\n//   textColor: \"black\",\r\n//   backgroundColor: \"yellow\",\r\n//   fontWeight: \"bold\",\r\n//   fontSize: \"xlarge\",\r\n// };\r\n","import * as Yup from \"yup\";\r\n\r\nexport const makeReservationSchemas = Yup.object().shape({\r\n  date: Yup.string().required(\"Date is required\"),\r\n  dinner: Yup.string().required(\"Number of diners is required\"),\r\n  time: Yup.string().required(\"Time is required\"),\r\n  occasion: Yup.string()\r\n    .oneOf(\r\n      [\"Birthday\", \"Anniversary\", \"Graduation\", \"Other\"],\r\n      \"Invalid occasion\"\r\n    )\r\n    .required(\"Occasion is required\"),\r\n  firstName: Yup.string().required(\"First name is required\"),\r\n  lastName: Yup.string().required(\"Last name is required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n  tel: Yup.string()\r\n    .matches(/^\\d+$/, \"Phone number must be digits only\")\r\n    .required(\"Phone number is required\"),\r\n  countryCode: Yup.string().required(\"Country code is required\"),\r\n  textArea: Yup.string(),\r\n});\r\n//\r\n\r\n// export const makeReservationSchemas = Yup.object().shape({\r\n//   date: Yup.date().required(\"Date is required\"),\r\n//   dinner: Yup.string()\r\n//     .required(\"Number of diners is required\")\r\n//     .when(\"time\", {\r\n//       is: (time) => time === \"Night\", // Conditional rule\r\n//       then: Yup.string().matches(\r\n//         /^[1-10] Diners$/,\r\n//         \"Only 1-10 diners allowed at night\"\r\n//       ),\r\n//     }),\r\n//   time: Yup.string().required(\"Time is required\"),\r\n//   occasion: Yup.string()\r\n//     .oneOf(\r\n//       [\"Birthday\", \"Anniversary\", \"Graduation\", \"Other\"],\r\n//       \"Invalid occasion\"\r\n//     )\r\n//     .required(\"Occasion is required\"),\r\n//   firstName: Yup.string().required(\"First name is required\"),\r\n//   lastName: Yup.string().required(\"Last name is required\"),\r\n//   email: Yup.string()\r\n//     .email(\"Invalid email format\")\r\n//     .required(\"Email is required\"),\r\n//   tel: Yup.string()\r\n//     .required(\"Phone number is required\")\r\n//     .matches(/^\\d+$/, \"Phone number must contain only digits\")\r\n//     .min(10, \"Phone number must be at least 10 digits\")\r\n//     .max(10, \"Phone number must be at most 10 digits\"),\r\n// });\r\n// .matches(/^[0-9]+$/, \"Phone number must be numeric\")\r\n// export const makeReservationSchemas = yup.object().shape({\r\n//   date: yup.string().required(\"Please select a valid date\"),\r\n//   dinner: yup.string().required(\"Kindly pick the number of dinners\"),\r\n//   occasion: yup.string().required(\"Please select an occasion\"),\r\n//   seating: yup.string().required(\"Please select where to seat\"),\r\n//   time: yup.string().required(\"Please select a time\"),\r\n\r\n//   firstName: yup.string().min(3).required(\"First name is required\"),\r\n//   lastName: yup.string().min(3).required(\"Last name is required\"),\r\n//   textArea: yup.string().min(5),\r\n//   // textArea: yup.string().min(5).required(\"Kindly leave a message\"),\r\n\r\n//   email: yup\r\n//     .string()\r\n//     .email(\"Invalid email address\")\r\n//     .required(\"Email is required\"),\r\n//   tel: yup\r\n//     .string()\r\n//     .required(\"Phone number is required\")\r\n//     .matches(/^[0-9]+$/, \"Phone number must be numeric\")\r\n//     .min(10, \"Phone number must be at least 10 digits\")\r\n//     .max(10, \"Phone number must be at most 10 digits\"),\r\n// });\r\n","import React, { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled components\r\nconst SelectContainer = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst SelectStyled = styled.select`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: var(--border-radius-md);\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n  appearance: none;\r\n  z-index: 10;\r\n`;\r\n\r\nconst SelectDivStyled = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: auto;\r\n  top: 100%;\r\n  left: 0;\r\n  background-color: var(--deepGreen);\r\n\r\n  /*  */\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  padding: 10px;\r\n  z-index: 80;\r\n`;\r\n\r\nconst OptionStyled = styled.option`\r\n  width: 48%;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  border: 1px solid #ccc;\r\n  text-align: center;\r\n  background-color: #f9f9f9;\r\n  border-radius: var(--border-radius-sm);\r\n\r\n  &:hover,\r\n  &:active {\r\n    background-color: #e0e0e0;\r\n  }\r\n`;\r\n\r\nfunction CustomDropdown({\r\n  value,\r\n  options,\r\n  toggleOptions,\r\n  $showOptions,\r\n  currentID,\r\n  dispatch,\r\n  ind,\r\n  handleChange,\r\n}) {\r\n  const selectRef = useRef(null);\r\n  const typeofDD = [\"date\", \"time\", \"occasion\", \"dinner\"];\r\n\r\n  const selectChangeHandler = (e) => {\r\n    const type = typeofDD[currentID];\r\n    handleChange(e);\r\n    dispatch({ type: type, payload: e.target.value });\r\n    toggleOptions();\r\n  };\r\n\r\n  return (\r\n    <SelectContainer>\r\n      <>\r\n        <SelectStyled\r\n          ref={selectRef}\r\n          onChange={selectChangeHandler}\r\n          value={value}\r\n          onClick={toggleOptions}\r\n          name={typeofDD[currentID]}\r\n          $showOptions={$showOptions}\r\n        />\r\n        {$showOptions && (\r\n          <SelectDivStyled>\r\n            {options.map((option, index) => (\r\n              <OptionStyled\r\n                key={`${typeofDD[ind]}${index}`}\r\n                onClick={() =>\r\n                  selectChangeHandler({\r\n                    target: { name: typeofDD[currentID], value: option },\r\n                  })\r\n                }\r\n              >\r\n                {option}\r\n              </OptionStyled>\r\n            ))}\r\n          </SelectDivStyled>\r\n        )}\r\n      </>\r\n    </SelectContainer>\r\n  );\r\n}\r\n\r\nexport default CustomDropdown;\r\n\r\n// ================================2\r\n\r\n// import React, { useRef, useEffect, useState } from \"react\";\r\n// import styled from \"styled-components\";\r\n// import ReactDOM from \"react-dom\";\r\n\r\n// // Styled components\r\n// const SelectContainer = styled.div`\r\n//   position: relative;\r\n//   display: inline-block;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   z-index: 20;\r\n// `;\r\n\r\n// const SelectStyled = styled.select`\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   border-radius: var(--border-radius-md);\r\n//   border: none;\r\n//   cursor: pointer;\r\n//   background-color: transparent;\r\n//   appearance: none;\r\n// `;\r\n\r\n// const SelectDivStyled = styled.div`\r\n//   position: absolute;\r\n//   width: ${({ width }) => width}px;\r\n//   height: auto;\r\n//   top: ${({ top }) => top}px;\r\n//   left: ${({ left }) => left}px;\r\n//   background-color: var(--deepGreen);\r\n//   display: flex;\r\n//   flex-wrap: wrap;\r\n//   gap: 10px;\r\n//   padding: 10px;\r\n//   z-index: 98;\r\n//   border: 2px solid red;\r\n// `;\r\n\r\n// const OptionStyled = styled.div`\r\n//   width: 48%;\r\n//   padding: 10px;\r\n//   cursor: pointer;\r\n//   border: 1px solid #ccc;\r\n//   text-align: center;\r\n//   background-color: #f9f9f9;\r\n//   border-radius: var(--border-radius-sm);\r\n\r\n//   &:hover,\r\n//   &:active {\r\n//     background-color: #e0e0e0;\r\n//   }\r\n// `;\r\n\r\n// function CustomDropdown({\r\n//   value,\r\n//   options,\r\n//   toggleOptions,\r\n//   $showOptions,\r\n//   currentID,\r\n//   dispatch,\r\n//   ind,\r\n//   handleChange,\r\n// }) {\r\n//   const selectRef = useRef(null);\r\n//   const [position, setPosition] = useState({ top: 0, left: 0, width: 0 });\r\n//   const portalRoot = document.getElementById(\"portal-root\");\r\n\r\n//   const typeofDD = [\"date\", \"time\", \"occasion\", \"dinner\"];\r\n\r\n//   const selectChangeHandler = (e) => {\r\n//     const type = typeofDD[currentID];\r\n//     handleChange(e);\r\n//     dispatch({ type: type, payload: e.target.value });\r\n//     toggleOptions();\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if ($showOptions && selectRef.current) {\r\n//       const selectRect = selectRef.current.getBoundingClientRect();\r\n//       setPosition({\r\n//         top: selectRect.bottom,\r\n//         left: selectRect.left,\r\n//         width: selectRect.width,\r\n//       });\r\n//     }\r\n//   }, [showOptions]);\r\n\r\n//   return (\r\n//     <SelectContainer>\r\n//       <SelectStyled\r\n//         ref={selectRef}\r\n//         onChange={selectChangeHandler}\r\n//         value={value}\r\n//         onClick={toggleOptions}\r\n//         name={typeofDD[currentID]}\r\n//       />\r\n//       {showOptions &&\r\n//         ReactDOM.createPortal(\r\n//           <SelectDivStyled\r\n//             top={position.top}\r\n//             left={position.left}\r\n//             width={position.width}\r\n//           >\r\n//             {options.map((option, index) => (\r\n//               <OptionStyled\r\n//                 key={`${typeofDD[ind]}${index}`}\r\n//                 onMouseDown={(e) => e.preventDefault()} // Prevent focus on click\r\n//                 onClick={(e) => {\r\n//                   e.stopPropagation(); // Prevent click event propagation\r\n//                   selectChangeHandler({\r\n//                     target: { name: typeofDD[currentID], value: option },\r\n//                   });\r\n//                 }}\r\n//               >\r\n//                 {option}\r\n//               </OptionStyled>\r\n//             ))}\r\n//           </SelectDivStyled>,\r\n//           portalRoot\r\n//         )}\r\n//     </SelectContainer>\r\n//   );\r\n// }\r\n\r\n// export default CustomDropdown;\r\n//============================3===========\r\n// import React, { useRef, useEffect, useState } from \"react\";\r\n// import styled from \"styled-components\";\r\n\r\n// // Styled components\r\n// const SelectContainer = styled.div`\r\n//   position: relative;\r\n//   display: inline-block;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   z-index: 20;\r\n// `;\r\n\r\n// const SelectStyled = styled.select`\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   border-radius: var(--border-radius-md);\r\n//   border: none;\r\n//   cursor: pointer;\r\n//   background-color: transparent;\r\n//   appearance: none;\r\n// `;\r\n\r\n// const SelectDivStyled = styled.div`\r\n//   position: absolute;\r\n//   width: ${({ width }) => width}px;\r\n//   height: auto;\r\n//   top: ${({ top }) => top}px;\r\n//   left: 0;\r\n//   background-color: var(--deepGreen);\r\n//   display: flex;\r\n//   flex-wrap: wrap;\r\n//   gap: 10px;\r\n//   padding: 10px;\r\n//   z-index: 98;\r\n//   border: 2px solid red;\r\n// `;\r\n\r\n// const OptionStyled = styled.div`\r\n//   width: 48%;\r\n//   padding: 10px;\r\n//   cursor: pointer;\r\n//   border: 1px solid #ccc;\r\n//   text-align: center;\r\n//   background-color: #f9f9f9;\r\n//   border-radius: var(--border-radius-sm);\r\n\r\n//   &:hover,\r\n//   &:active {\r\n//     background-color: #e0e0e0;\r\n//   }\r\n// `;\r\n\r\n// function CustomDropdown({\r\n//   value,\r\n//   options,\r\n//   toggleOptions,\r\n//   showOptions,\r\n//   currentID,\r\n//   dispatch,\r\n//   ind,\r\n//   handleChange,\r\n// }) {\r\n//   const selectContainerRef = useRef(null);\r\n//   const selectRef = useRef(null);\r\n//   const [dropdownStyle, setDropdownStyle] = useState({ top: 0, width: 0 });\r\n\r\n//   const typeofDD = [\"date\", \"time\", \"occasion\", \"dinner\"];\r\n\r\n//   const selectChangeHandler = (e) => {\r\n//     const type = typeofDD[currentID];\r\n//     handleChange(e);\r\n//     dispatch({ type: type, payload: e.target.value });\r\n//     toggleOptions();\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (showOptions && selectRef.current && selectContainerRef.current) {\r\n//       const containerRect = selectContainerRef.current.getBoundingClientRect();\r\n//       const selectRect = selectRef.current.getBoundingClientRect();\r\n//       const top = selectRect.height; // Height of the select element to position the dropdown below it\r\n//       const width = containerRect.width;\r\n//       setDropdownStyle({ top, width });\r\n//     }\r\n//   }, [showOptions]);\r\n\r\n//   return (\r\n//     <SelectContainer ref={selectContainerRef}>\r\n//       <SelectStyled\r\n//         ref={selectRef}\r\n//         onChange={selectChangeHandler}\r\n//         value={value}\r\n//         onClick={toggleOptions}\r\n//         name={typeofDD[currentID]}\r\n//       />\r\n//       {showOptions && (\r\n//         <SelectDivStyled top={dropdownStyle.top} width={dropdownStyle.width}>\r\n//           {options.map((option, index) => (\r\n//             <OptionStyled\r\n//               key={`${typeofDD[ind]}${index}`}\r\n//               onMouseDown={(e) => e.preventDefault()} // Prevent focus on click\r\n//               onClick={(e) => {\r\n//                 e.stopPropagation(); // Prevent click event propagation\r\n//                 selectChangeHandler({\r\n//                   target: { name: typeofDD[currentID], value: option },\r\n//                 });\r\n//               }}\r\n//             >\r\n//               {option}\r\n//             </OptionStyled>\r\n//           ))}\r\n//         </SelectDivStyled>\r\n//       )}\r\n//     </SelectContainer>\r\n//   );\r\n// }\r\n\r\n// export default CustomDropdown;\r\n","export const LASTINPUTID = 3;\r\nexport const boxShadowValue = `\r\nexport const ZERO = 0;\r\n0 2.8px 2.2px rgba(0, 0, 0, 0.034),\r\n0 6.7px 5.3px rgba(0, 0, 0, 0.048),\r\n0 12.5px 10px rgba(0, 0, 0, 0.06),\r\n0 22.3px 17.9px rgba(0, 0, 0, 0.072),\r\n0 41.8px 33.4px rgba(0, 0, 0, 0.086),\r\n0 100px 80px rgba(0, 0, 0, 0.12)\r\n`;\r\n","import React, { useState, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CustomDropdown from \"./CustomDropDown\";\r\nimport { Paragraph } from \"../ui/Paragraph\";\r\nimport { boxShadowValue } from \"../ui/Constant\";\r\n\r\nconst CustomSelectContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  row-gap: 7rem;\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  @media (max-width: 450px) {\r\n    width: 100%;\r\n    margin-top: 4rem;\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  flex-direction: column;\r\n  row-gap: 0.4rem;\r\n  height: auto;\r\n\r\n  @media (max-width: 450px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst CustomButtonStyledContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 5rem;\r\n  padding: 0;\r\n  background-color: ${({ value }) =>\r\n    value ? \"var(--deepGreen)\" : \"var(--pureWhite)\"};\r\n  border-radius: var(--border-radius-md);\r\n  display: flex;\r\n  align-items: center;\r\n  /* error */\r\n  border: ${({ errors }) => (errors ? \"2px solid red\" : \"\")};\r\n  /* selected */\r\n  box-shadow: ${({ value }) => (value ? boxShadowValue : \"\")};\r\n\r\n  /*  */\r\n`;\r\n\r\nconst ButtonLabel = styled.label`\r\n  font-size: 1.6rem;\r\n  color: var(--pureWhite);\r\n`;\r\n\r\nconst CustomRenderInputContent = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  padding: 1rem 2rem;\r\n  /* z-index: 10; */\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  color: ${({ value }) => (value ? \"var(--pureWhite)\" : \"var(--deepGreen)\")};\r\n`;\r\n\r\nconst DateInput = styled.input`\r\n  position: relative;\r\n  z-index: 20;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0 5%;\r\n  border-radius: var(--border-radius-md);\r\n  color: transparent;\r\n  text-shadow: 0 0 0 0;\r\n  background-color: transparent;\r\n  opacity: 0;\r\n\r\n  &::-webkit-calendar-picker-indicator {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst RenderSpanText = styled.span`\r\n  color: inherit;\r\n  font-weight: var(--deepBold);\r\n  font-size: 1.8rem;\r\n  font-family: var(--karla);\r\n`;\r\nconst RotatingSpan = styled.span`\r\n  transition: transform 0.3s ease-in-out;\r\n\r\n  transform: ${({ value }) => (value ? \"rotate(180deg)\" : \"\")};\r\n  margin-top: ${({ value }) => (value ? \"-1rem\" : \"\")};\r\n  /* margin-top: -1rem; */\r\n`;\r\n\r\nconst CustomButton = ({\r\n  handleBlur,\r\n  handleChange,\r\n  errors,\r\n  dispatch,\r\n  content,\r\n  formSubmitted,\r\n  values,\r\n}) => {\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [currentOption, setCurrentOption] = useState(null);\r\n\r\n  const dateRef = useRef(null);\r\n\r\n  const onShowPicker = () => {\r\n    dateRef.current.showPicker();\r\n  };\r\n\r\n  const dateChangeHandler = (e) => {\r\n    const selectedDate = new Date(e.target.value);\r\n    const formattedDate = selectedDate.toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    });\r\n    handleChange(e);\r\n    dispatch({ type: \"date\", payload: formattedDate });\r\n  };\r\n\r\n  const toggleOptions = (id) => {\r\n    setCurrentOption(id);\r\n    setShowOptions((prevShow) => (currentOption !== id ? true : !prevShow));\r\n  };\r\n  // console.log(content);\r\n  return (\r\n    <CustomSelectContainer>\r\n      {content.map((btn, i) => {\r\n        const {\r\n          beforeIcon,\r\n          value,\r\n          afterIcon,\r\n          label,\r\n          inputType,\r\n          options,\r\n          currentID,\r\n          name,\r\n          placeholder,\r\n        } = btn;\r\n        return (\r\n          <ButtonContainer key={i}>\r\n            <ButtonLabel>{label}</ButtonLabel>\r\n            <CustomButtonStyledContainer\r\n              errors={errors[name] && formSubmitted}\r\n              value={values[btn.name] !== \"\"}\r\n            >\r\n              {inputType === \"input\" ? (\r\n                <DateInput\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  placeholder={placeholder}\r\n                  ref={dateRef}\r\n                  onClick={onShowPicker}\r\n                  value={values[btn.name]}\r\n                  onChange={dateChangeHandler}\r\n                  onBlur={handleBlur}\r\n                />\r\n              ) : (\r\n                <CustomDropdown\r\n                  ind={i}\r\n                  options={options}\r\n                  value={values[btn.name]}\r\n                  currentID={currentID}\r\n                  $showOptions={showOptions && currentOption === currentID}\r\n                  toggleOptions={() => toggleOptions(currentID)}\r\n                  dispatch={dispatch}\r\n                  handleChange={handleChange}\r\n                />\r\n              )}\r\n              <CustomRenderInputContent\r\n                value={value !== placeholder}\r\n                onClick={toggleOptions}\r\n              >\r\n                <span>{beforeIcon}</span>\r\n                <RenderSpanText>{value}</RenderSpanText>\r\n                <RotatingSpan value={values[btn.name]}>\r\n                  {afterIcon}\r\n                </RotatingSpan>\r\n              </CustomRenderInputContent>\r\n            </CustomButtonStyledContainer>\r\n            {errors[name] && formSubmitted && (\r\n              <Paragraph color=\"red\" fontSize=\"large\">\r\n                {errors[name]}\r\n              </Paragraph>\r\n            )}\r\n          </ButtonContainer>\r\n        );\r\n      })}\r\n    </CustomSelectContainer>\r\n  );\r\n};\r\n\r\nexport default CustomButton;\r\n","// import { useState } from \"react\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IoMdStar } from \"react-icons/io\";\r\nimport { FaCalendar } from \"react-icons/fa\";\r\nimport { IoPersonOutline } from \"react-icons/io5\";\r\nimport { LiaGlassCheersSolid } from \"react-icons/lia\";\r\nimport { LuAlarmClock } from \"react-icons/lu\";\r\n\r\nimport { LASTINPUTID } from \"../ui/Constant\";\r\nimport { Paragraph } from \"../ui/Paragraph\";\r\n\r\nconst GenaralInputsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  row-gap: 2rem;\r\n`;\r\nconst EachInputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst LabelInput = styled.label`\r\n  font-family: var(--karla);\r\n  color: var(--pureWhite);\r\n  font-size: 1.6rem;\r\n`;\r\nconst InputWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 0px;\r\n  position: relative;\r\n  height: 4.5rem;\r\n  overflow: hidden;\r\n  background-color: var(--pureWhite);\r\n  border-radius: var(--border-radius-md);\r\n  border: ${({ error }) => (error ? \"2px solid red\" : \"\")};\r\n`;\r\nconst Input = styled.input.withConfig({\r\n  shouldForwardProp: (prop) => prop !== \"space\",\r\n})`\r\n  height: 100%;\r\n  position: relative;\r\n  padding: ${({ space }) => (space ? \"0.5rem 2rem;\" : \"0.5rem 1rem;\")};\r\n  border-radius: var(--border-radius-md);\r\n  border: none;\r\n  outline: var(--deepGreen);\r\n  font-weight: var(--bold);\r\n  color: var(--deepGreen);\r\n  width: ${({ itemId }) => (itemId === LASTINPUTID ? \"80%\" : \"100%\")};\r\n  margin-left: ${({ itemId }) => (itemId === LASTINPUTID ? \"20%\" : \"\")};\r\n  &:focus {\r\n    height: 100%;\r\n    padding: 0 2.5rem;\r\n  }\r\n  &::placeholder {\r\n    color: var(--deepGreen);\r\n    font-style: italic;\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\n// const Input = styled.input.withConfig({\r\n//   shouldForwardProp: (prop) => prop !== \"space\",\r\n// })`\r\n//   height: 100%;\r\n//   position: relative;\r\n//   padding: ${({ space }) => (space ? \"0.5rem 2rem;\" : \"0.5rem 1rem;\")};\r\n//   border-radius: var(--border-radius-md);\r\n//   border: none;\r\n//   outline: var(--deepGreen);\r\n//   font-weight: var(--bold);\r\n//   color: var(--deepGreen);\r\n//   width: ${({ itemId }) => (itemId === LASTINPUTID ? \"80%\" : \"100%\")};\r\n//   margin-left: ${({ itemId }) => (itemId === LASTINPUTID ? \"20%\" : \"\")};\r\n//   &:focus {\r\n//     height: 100%;\r\n//     padding: 0 2.5rem;\r\n//   }\r\n//   &::placeholder {\r\n//     color: var(--deepGreen);\r\n//     font-style: italic;\r\n//     font-size: 1.6rem;\r\n//   }\r\n// `;\r\n\r\n// const Input = styled.input`\r\n//   height: 100%;\r\n//   position: relative;\r\n//   padding: ${({ space }) => (space ? \"0.5rem 2rem;\" : \"0.5rem 1rem;\")};\r\n//   border-radius: var(--border-radius-md);\r\n//   border: none;\r\n//   outline: var(--deepGreen);\r\n//   font-weight: var(--bold);\r\n//   color: var(--deepGreen);\r\n//   /*  */\r\n//   width: ${({ itemId }) => (itemId === LASTINPUTID ? \"80%\" : \"100%\")};\r\n//   margin-left: ${({ itemId }) => (itemId === LASTINPUTID ? \"20%\" : \"\")};\r\n//   &:focus {\r\n//     height: 100%;\r\n//     padding: 0 2.5rem;\r\n//   }\r\n//   &::placeholder {\r\n//     color: var(--deepGreen);\r\n//     font-style: italic;\r\n//     font-size: 1.6rem;\r\n//   }\r\n// `;\r\n\r\n// Select\r\n\r\nconst SelectStyled = styled.select`\r\n  font-family: var(--karla);\r\n  color: var(--deepGreen);\r\n  border-radius: var(--border-radius-md);\r\n  height: 100%;\r\n  position: absolute;\r\n  top: -0.1rem;\r\n  left: 0;\r\n  width: 23%;\r\n  z-index: 20;\r\n  font-size: 1.6rem;\r\n  font-weight: var(--regular);\r\n  border: none;\r\n  outline: none;\r\n  padding: 0 1rem;\r\n`;\r\nconst OptionStyled = styled.option`\r\n  font-weight: var(--bold);\r\n  font-size: 1.4rem;\r\n  padding: 0 1rem;\r\n  color: var(deepGreen);\r\n  z-index: 10;\r\n`;\r\n\r\n// Make Reservation Data\r\nconst MakeReservationDataContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-top: 2rem;\r\n`;\r\n\r\nconst MakeReservationData = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  row-gap: 2rem;\r\n`;\r\nconst EachMakeReservationData = styled.div`\r\n  width: 45%;\r\n  color: var(--pureWhite);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  /* gap: 2rem; */\r\n  align-items: center;\r\n  padding-right: 1.5rem;\r\n  border-radius: var(--border-radius-sm);\r\n  border: ${({ error }) => (error ? \"2px solid red\" : \"\")};\r\n  cursor: pointer;\r\n`;\r\nconst IconSpan = styled.span`\r\n  & > * {\r\n    font-size: 3rem;\r\n    color: var(--pureWhite);\r\n  }\r\n`;\r\nconst TextSpan = styled.span`\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n`;\r\nconst ButtonSelected = styled.div`\r\n  font-weight: var(--Bold);\r\n  color: var(--pureWhite);\r\n  font-size: 2rem;\r\n  margin-top: 2rem;\r\n`;\r\nconst TextAreaContainer = styled.div`\r\n  width: 100%;\r\n  margin-top: 2rem;\r\n`;\r\nconst TextAreaStyled = styled.textarea`\r\n  width: 100%;\r\n  height: 13rem;\r\n  border-radius: var(--border-radius-md);\r\n  padding: 2rem;\r\n`;\r\n\r\nexport function LeftBackCard({\r\n  values,\r\n  handleChange,\r\n  errors,\r\n  touched,\r\n  dataArr,\r\n  turnCardHandler,\r\n  formSubmitted,\r\n}) {\r\n  const cardLeftInput = dataArr.filter(\r\n    (input) => input.id === \"firstName\" || input.id === \"email\"\r\n  );\r\n  // console.log(cardLeftInput);\r\n  const makeReservationArr = [\r\n    {\r\n      icon: <FaCalendar style={{ fontSize: \"2.4rem\", color: \"inherit\" }} />,\r\n      text: values.date || \"Select Date\",\r\n      id: \"date\",\r\n      name: \"date\",\r\n    },\r\n    {\r\n      icon: (\r\n        <IoPersonOutline style={{ fontSize: \"2.4rem\", color: \"inherit\" }} />\r\n      ),\r\n      text: values.dinner || \"No. of diners\",\r\n      id: \"dinner\",\r\n      name: \"dinner\",\r\n    },\r\n    {\r\n      icon: <LuAlarmClock style={{ fontSize: \"2.4rem\", color: \"inherit\" }} />,\r\n      text: values.time || \"Select Time\",\r\n      id: \"time\",\r\n      name: \"time\",\r\n    },\r\n    {\r\n      icon: (\r\n        <LiaGlassCheersSolid style={{ fontSize: \"2.4rem\", color: \"inherit\" }} />\r\n      ),\r\n      text: values.occasion || \"Occasion\",\r\n      id: \"occasion\",\r\n      name: \"occasion\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <GeneralInputsContainer\r\n        // LestInput Array\r\n        arr={cardLeftInput}\r\n        errors={errors}\r\n        touched={touched}\r\n        values={values}\r\n        handleChange={handleChange}\r\n        formSubmitted={formSubmitted}\r\n      />\r\n      <SummaryOfSelectTags\r\n        // frontpage result Array\r\n        makeReservationArr={makeReservationArr}\r\n        values={values}\r\n        errors={errors}\r\n        turnCardHandler={turnCardHandler}\r\n        formSubmitted={formSubmitted}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function RightBackCard({\r\n  values,\r\n  handleChange,\r\n  errors,\r\n  touched,\r\n  dataArr,\r\n  handleBlur,\r\n  formSubmitted,\r\n}) {\r\n  const textAreaText = { label: \"Special Requests\", value: \"\" };\r\n\r\n  const cardRightInput = dataArr.filter(\r\n    (input) => input.id !== \"firstName\" && input.id !== \"email\"\r\n  );\r\n  return (\r\n    <div>\r\n      <GeneralInputsContainer\r\n        arr={cardRightInput}\r\n        errors={errors}\r\n        touched={touched}\r\n        values={values}\r\n        handleChange={handleChange}\r\n        handleBlur={handleBlur}\r\n        formSubmitted={formSubmitted}\r\n      />\r\n\r\n      <TextAreaContainer>\r\n        <LabelInput>{textAreaText.label}</LabelInput>\r\n        <TextAreaStyled\r\n          id=\"textArea\"\r\n          name=\"textArea\"\r\n          onChange={handleChange}\r\n          value={values[\"textArea\"]}\r\n          onBlur={handleBlur}\r\n        />\r\n        <div>\r\n          {/* {errors.textArea && touched.textArea && (\r\n            <Paragraph fontSize=\"large\" color=\"red\">\r\n              {errors.textArea}\r\n            </Paragraph>\r\n          )} */}\r\n        </div>\r\n      </TextAreaContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SummaryOfSelectTags({\r\n  turnCardHandler,\r\n  makeReservationArr,\r\n  values,\r\n  errors,\r\n  formSubmitted,\r\n}) {\r\n  return (\r\n    <MakeReservationDataContainer>\r\n      <MakeReservationData>\r\n        {makeReservationArr.map((data) => {\r\n          const { icon, text, id, name } = data;\r\n          // console.log(errors[name] && formSubmitted);\r\n          return (\r\n            <EachMakeReservationData\r\n              key={id}\r\n              error={errors[name] && formSubmitted}\r\n              onClick={turnCardHandler}\r\n            >\r\n              <IconSpan>{icon}</IconSpan>\r\n              <TextSpan>{text}</TextSpan>\r\n            </EachMakeReservationData>\r\n          );\r\n        })}\r\n      </MakeReservationData>\r\n      <ButtonSelected>{`${values.seating} seating`}</ButtonSelected>\r\n    </MakeReservationDataContainer>\r\n  );\r\n}\r\n\r\nfunction GeneralInputsContainer({\r\n  arr,\r\n  errors,\r\n  touched,\r\n  values,\r\n  handleChange,\r\n  formSubmitted,\r\n}) {\r\n  return (\r\n    <GenaralInputsContainer>\r\n      {arr.map((input, i) => {\r\n        const { id, inputType, label, itemId, selectOptns, placeholder } =\r\n          input;\r\n        return (\r\n          <EachInputContainer key={i}>\r\n            <LabelInput htmlFor={id}>\r\n              <IoMdStar\r\n                style={{\r\n                  fontSize: \"1.2rem\",\r\n                  color: \"var(--pureWhite)\",\r\n                }}\r\n              />\r\n              {label}\r\n            </LabelInput>\r\n\r\n            <InputWrapper error={errors[id] && touched[id]}>\r\n              {itemId === LASTINPUTID && (\r\n                <SelectStyled\r\n                  id={\"countryCode\"}\r\n                  value={values.countryCode}\r\n                  onChange={handleChange}\r\n                >\r\n                  {selectOptns.map((optn) => {\r\n                    const { countryAbbrev, country, code } = optn;\r\n                    return (\r\n                      // <OptionStyled value={Number(code)} key={country}>\r\n                      <OptionStyled value={code} key={country}>\r\n                        {countryAbbrev}\r\n                      </OptionStyled>\r\n                    );\r\n                  })}\r\n                </SelectStyled>\r\n              )}\r\n              <Input\r\n                type={inputType}\r\n                itemId={itemId}\r\n                id={id}\r\n                name={id}\r\n                placeholder={placeholder}\r\n                value={values[id]}\r\n                onChange={handleChange}\r\n                space={itemId === LASTINPUTID}\r\n              />\r\n            </InputWrapper>\r\n            {errors[id] && touched[id] && formSubmitted && (\r\n              <Paragraph color=\"red\" fontSize=\"large\">\r\n                {errors[id]}\r\n              </Paragraph>\r\n            )}\r\n          </EachInputContainer>\r\n        );\r\n      })}\r\n    </GenaralInputsContainer>\r\n  );\r\n}\r\n// INITIAL APPROACH\r\n// export default BackPageOfMakeReservation;\r\n\r\n// import styled from \"styled-components\";\r\n// import { IoMdStar } from \"react-icons/io\";\r\n// import { FaCalendar } from \"react-icons/fa\";\r\n\r\n// import { LASTINPUTID } from \"../ui/Constant\";\r\n// import { useState } from \"react\";\r\n// import { IoPersonOutline } from \"react-icons/io5\";\r\n// import { LuAlarmClock } from \"react-icons/lu\";\r\n// import { LiaGlassCheersSolid } from \"react-icons/lia\";\r\n// import { Paragraph } from \"../ui/Paragraph\";\r\n\r\n// const ConfirmReservationStyled = styled.div`\r\n//   background-color: var(--deepGreen);\r\n//   padding: 3rem 0.5rem;\r\n// `;\r\n\r\n// const GenaralInputsContainer = styled.div`\r\n//   width: 100%;\r\n//   display: flex;\r\n//   justify-content: space-between;\r\n//   align-items: center;\r\n//   flex-wrap: wrap;\r\n//   row-gap: 2rem;\r\n// `;\r\n// const EachInputContainer = styled.div`\r\n//   width: 45%;\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   /* justify-content: flex-start; */\r\n// `;\r\n// const LabelInput = styled.label`\r\n//   font-family: var(--karla);\r\n//   color: var(--pureWhite);\r\n//   font-size: 1.6rem;\r\n// `;\r\n// const InputWrapper = styled.div`\r\n//   width: 100%;\r\n//   padding: 0px;\r\n//   position: relative;\r\n//   height: 4.5rem;\r\n//   /* height: auto; */\r\n//   overflow: hidden;\r\n//   background-color: var(--pureWhite);\r\n//   border-radius: var(--border-radius-md);\r\n//   border: ${({ error }) => (error ? \"2px solid red\" : \"\")};\r\n// `;\r\n// const Input = styled.input`\r\n//   height: 100%;\r\n//   position: relative;\r\n//   padding: 0.5rem 1rem;\r\n//   border-radius: var(--border-radius-md);\r\n//   border: none;\r\n//   outline: var(--deepGreen);\r\n//   font-weight: var(--bold);\r\n//   color: var(--deepGreen);\r\n//   /*  */\r\n//   width: ${({ itemId }) => (itemId === LASTINPUTID ? \"80%\" : \"100%\")};\r\n//   margin-left: ${({ itemId }) => (itemId === LASTINPUTID ? \"20%\" : \"\")};\r\n//   &:focus {\r\n//     height: 100%;\r\n//     padding: 0 2.5rem;\r\n//   }\r\n//   &::placeholder {\r\n//     color: var(--deepGreen);\r\n//     font-style: italic;\r\n//     font-size: 1.6rem;\r\n//     /* font-family: var(--karla); */\r\n//   }\r\n// `;\r\n\r\n// // Select\r\n// const SelectStyled = styled.select`\r\n//   font-family: var(--karla);\r\n//   color: var(--deepGreen);\r\n//   border-radius: var(--border-radius-md);\r\n//   height: 100%;\r\n//   position: absolute;\r\n//   top: -0.1rem;\r\n//   left: 0;\r\n//   width: 23%;\r\n//   z-index: 20;\r\n//   font-size: 1.6rem;\r\n//   font-weight: var(--regular);\r\n//   border: none;\r\n//   outline: none;\r\n//   /* height: 3.5rem; */\r\n//   padding: 0 1rem;\r\n// `;\r\n// const OptionStyled = styled.option`\r\n//   font-weight: var(--bold);\r\n//   font-size: 1.4rem;\r\n//   padding: 0 1rem;\r\n//   color: var(deepGreen);\r\n//   z-index: 10;\r\n// `;\r\n// // BOTTOM\r\n// const GenaralBottomContainer = styled.div`\r\n//   margin-top: 2rem;\r\n\r\n//   width: 100%;\r\n//   display: flex;\r\n//   justify-content: space-between;\r\n//   align-items: center;\r\n\r\n//   flex-wrap: wrap;\r\n\r\n//   @media (max-width: 450px) {\r\n//     align-items: center;\r\n//   }\r\n//   /* row-gap: 2rem; */\r\n// `;\r\n// // Make Reservation Data\r\n// const MakeReservationDataContainer = styled.div`\r\n//   width: 45%;\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n//   flex-direction: column;\r\n//   margin-top: 2rem;\r\n// `;\r\n\r\n// const MakeReservationData = styled.div`\r\n//   width: 100%;\r\n//   display: flex;\r\n//   justify-content: space-between;\r\n//   align-items: center;\r\n//   flex-wrap: wrap;\r\n\r\n//   row-gap: 2rem;\r\n// `;\r\n// const EachMakeReservationData = styled.div`\r\n//   width: 45%;\r\n//   display: flex;\r\n//   justify-content: space-between;\r\n//   align-items: center;\r\n//   padding-right: 1.5rem;\r\n//   border-radius: var(--border-radius-sm);\r\n\r\n//   border: ${({ error }) => (error ? \"2px solid red\" : \"\")};\r\n// `;\r\n// const IconSpan = styled.span`\r\n//   & > * {\r\n//     font-size: 3rem;\r\n//     color: var(--pureWhite);\r\n//   }\r\n// `;\r\n// const TextSpan = styled.span`\r\n//   font-size: 1.4rem;\r\n//   color: var(--pureWhite);\r\n//   font-weight: 600;\r\n// `;\r\n// const ButtonSelected = styled.div`\r\n//   font-weight: var(--Bold);\r\n//   color: var(--pureWhite);\r\n//   font-size: 2rem;\r\n// `;\r\n// const TextAreaContainer = styled.div`\r\n//   width: 45%;\r\n// `;\r\n// const TextAreaStyled = styled.textarea`\r\n//   width: 100%;\r\n//   height: 13rem;\r\n//   border-radius: var(--border-radius-md);\r\n//   padding: 2rem;\r\n// `;\r\n// function BackPageOfMakeReservation({\r\n//   values,\r\n//   handleChange,\r\n//   dispatch,\r\n//   errors,\r\n//   touched,\r\n// }) {\r\n//   const [selectCountryCode, setSelectCountryCode] = useState(\"NG\");\r\n//   const contryCodeHandler = (e) => setSelectCountryCode(e.target.value);\r\n//   const dataArr = [\r\n//     {\r\n//       label: \"First Name\",\r\n//       id: \"firstName\",\r\n//       inputType: \"text\",\r\n//       itemId: 0,\r\n//       placeholder: \"Oluwaseun\",\r\n//     },\r\n//     {\r\n//       label: \"Last Name\",\r\n//       id: \"lastName\",\r\n//       inputType: \"text\",\r\n//       itemId: 1,\r\n//       placeholder: \"Sodeeq\",\r\n//     },\r\n//     {\r\n//       label: \"Email\",\r\n//       id: \"email\",\r\n//       inputType: \"email\",\r\n//       itemId: 2,\r\n//       placeholder: \"ademolaoluwaseun90@gmail.com\",\r\n//     },\r\n//     {\r\n//       label: \"Phone Number\",\r\n//       id: \"tel\",\r\n//       inputType: \"tel\",\r\n//       itemId: 3,\r\n//       placeholder: \"8149428278\",\r\n//       selectOptns: [\r\n//         { code: +234, countryAbbrev: \"NG\", country: \"Nigeria\" },\r\n//         { code: +1, countryAbbrev: \"US\", country: \"United State of America\" },\r\n//         { code: +91, countryAbbrev: \"IN\", country: \"India\" },\r\n//         { code: +44, countryAbbrev: \"GB\", country: \"Great Britain\" },\r\n//         { code: +86, countryAbbrev: \"CN\", country: \"China\" },\r\n//       ],\r\n//     },\r\n//   ];\r\n//   const textAreaText = { label: \"Special Requests\", value: \"\" };\r\n\r\n//   const makeReservationArr = [\r\n//     { icon: <FaCalendar />, text: values.date || \"Select Date\", id: \"date\" },\r\n//     {\r\n//       icon: <IoPersonOutline />,\r\n//       text: values.dinner || \"No. of diners\",\r\n//       id: \"dinner\",\r\n//     },\r\n//     { icon: <LuAlarmClock />, text: values.time || \"Select Time\", id: \"time\" },\r\n//     {\r\n//       icon: <LiaGlassCheersSolid />,\r\n//       text: values.occasion || \"Occasion\",\r\n//       id: \"occasion\",\r\n//     },\r\n//   ];\r\n//   const textAreaHandler = (e) => {\r\n//     handleChange(e);\r\n//     dispatch({ type: \"textArea\", payload: e.target.value });\r\n//   };\r\n//   // console.log(errors);\r\n//   return (\r\n//     <>\r\n//       {/* <Container as=\"section\" type=\"confirmReservation\">\r\n//         <Content> */}\r\n//       <ConfirmReservationStyled>\r\n//         {/* <Form action=\"\"> */}\r\n//         <GenaralInputsContainer>\r\n//           {dataArr.map((input, i) => {\r\n//             const { id, inputType, label, itemId, selectOptns, placeholder } =\r\n//               input;\r\n//             return (\r\n//               <EachInputContainer key={i}>\r\n//                 <LabelInput htmlFor={id}>\r\n//                   <IoMdStar\r\n//                     style={{\r\n//                       fontSize: \"1.2rem\",\r\n//                       color: \"var(--pureWhite)\",\r\n//                     }}\r\n//                   />\r\n//                   {label}\r\n//                 </LabelInput>\r\n\r\n//                 <InputWrapper error={errors[id] && touched[id]}>\r\n//                   {itemId === LASTINPUTID && (\r\n//                     <SelectStyled\r\n//                       value={selectCountryCode}\r\n//                       onChange={contryCodeHandler}\r\n//                     >\r\n//                       {selectOptns.map((optn) => (\r\n//                         <OptionStyled key={optn.country}>\r\n//                           {optn.countryAbbrev}\r\n//                         </OptionStyled>\r\n//                       ))}\r\n//                     </SelectStyled>\r\n//                   )}\r\n//                   <Input\r\n//                     type={inputType}\r\n//                     itemId={itemId}\r\n//                     id={id}\r\n//                     name={id}\r\n//                     placeholder={placeholder}\r\n//                     value={values[id]}\r\n//                     onChange={handleChange}\r\n//                   />\r\n//                 </InputWrapper>\r\n//                 {errors[id] && (\r\n//                   <Paragraph color=\"red\" fontSize=\"large\">\r\n//                     {errors[id]}\r\n//                   </Paragraph>\r\n//                 )}\r\n//               </EachInputContainer>\r\n//             );\r\n//           })}\r\n//         </GenaralInputsContainer>\r\n//         <GenaralBottomContainer>\r\n//           <MakeReservationDataContainer>\r\n//             <MakeReservationData>\r\n//               {makeReservationArr.map((data, i) => {\r\n//                 const { icon, text, id } = data;\r\n//                 return (\r\n//                   <EachMakeReservationData key={i} error={errors[id]}>\r\n//                     <IconSpan>{icon}</IconSpan>\r\n//                     <TextSpan>{text}</TextSpan>\r\n//                   </EachMakeReservationData>\r\n//                 );\r\n//               })}\r\n//             </MakeReservationData>\r\n//             <ButtonSelected>{`${values.seating} seating`}</ButtonSelected>\r\n//           </MakeReservationDataContainer>\r\n//           <TextAreaContainer>\r\n//             <LabelInput>{textAreaText.label}</LabelInput>\r\n//             {/* <TextAreaStyled value={} onChange={}/> */}\r\n//             <TextAreaStyled\r\n//               id=\"textArea\"\r\n//               onChange={textAreaHandler}\r\n//               // value={values.id}\r\n//             />\r\n//           </TextAreaContainer>\r\n//         </GenaralBottomContainer>\r\n//         {/* </Form> */}\r\n//       </ConfirmReservationStyled>\r\n//       {/* </Content>\r\n//       </Container> */}\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default BackPageOfMakeReservation;\r\n","import styled from \"styled-components\";\r\n\r\n// Base style for CardFace\r\nexport const CardFace = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  -webkit-backface-visibility: hidden;\r\n  backface-visibility: hidden;\r\n  transition: transform 0.8s ease;\r\n  overflow: hidden;\r\n`;\r\n\r\n// Extend CardFace for different card sides\r\nexport const FrontCardLeft = styled(CardFace)``;\r\nexport const FrontCardRight = styled(CardFace)``;\r\nexport const BackCardLeft = styled(CardFace)``;\r\nexport const BackCardRight = styled(CardFace)``;\r\n\r\n// ReservationCard with conditional transform logic\r\nexport const ReservationCard = styled.div.withConfig({\r\n  shouldForwardProp: (prop) => ![\"turn\"].includes(prop),\r\n})`\r\n  position: relative;\r\n  z-index: 10;\r\n  width: 100%;\r\n  height: 45rem;\r\n  perspective: 150rem;\r\n  overflow: hidden;\r\n\r\n  // Front Card Left transformation\r\n  & ${FrontCardLeft} {\r\n    transform: ${({ turn }) => (turn ? \"rotateY(180deg)\" : \"rotateY(0deg)\")};\r\n  }\r\n  // Front Card Right transformation\r\n  & ${FrontCardRight} {\r\n    transform: ${({ turn }) => (turn ? \"rotateY(-180deg)\" : \"rotateY(0deg)\")};\r\n  }\r\n  // Back Card Left transformation\r\n  & ${BackCardLeft} {\r\n    transform: ${({ turn }) => (turn ? \"rotateY(0deg)\" : \"rotateY(180deg)\")};\r\n  }\r\n  // Back Card Right transformation\r\n  & ${BackCardRight} {\r\n    transform: ${({ turn }) => (turn ? \"rotateY(0deg)\" : \"rotateY(-180deg)\")};\r\n  }\r\n`;\r\n\r\n// Style for left card container\r\nexport const CardLeft = styled.div`\r\n  width: 50%;\r\n\r\n  @media (max-width: 760px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\n// Style for right card container\r\nexport const CardRight = styled.div`\r\n  width: 50%;\r\n\r\n  @media (max-width: 760px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\n// Flex container for cards\r\nexport const FlexedCard = styled.div`\r\n  display: flex;\r\n  column-gap: 5rem;\r\n\r\n  @media (max-width: 760px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\n// import styled from \"styled-components\";\r\n\r\n// export const CardFace = styled.div`\r\n//   position: absolute;\r\n//   left: 0;\r\n//   top: 0;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   -webkit-backface-visibility: hidden;\r\n//   backface-visibility: hidden;\r\n//   transition: transform 0.8s ease;\r\n//   overflow: hidden;\r\n// `;\r\n\r\n// export const FrontCardLeft = styled(CardFace)``;\r\n\r\n// export const FrontCardRight = styled(CardFace)``;\r\n\r\n// export const BackCardLeft = styled(CardFace)``;\r\n\r\n// export const BackCardRight = styled(CardFace)``;\r\n\r\n// export const ReservationCard = styled.div.withConfig({\r\n//   shouldForwardProp: (prop) => ![\"$turn\"].includes(prop),\r\n// })`\r\n//   position: relative;\r\n//   z-index: 10;\r\n//   width: 100%;\r\n//   height: 45rem;\r\n//   perspective: 150rem;\r\n//   overflow: hidden;\r\n\r\n//   & ${FrontCardLeft} {\r\n//     transform: ${({ $turn }) => {\r\n//       return $turn ? \"rotateY(180deg)\" : \"rotateY(0deg)\";\r\n//     }};\r\n//   }\r\n//   & ${FrontCardRight} {\r\n//     transform: ${({ $turn }) => {\r\n//       return $turn ? \"rotateY(-180deg)\" : \"rotateY(0deg)\";\r\n//     }};\r\n//   }\r\n\r\n//   & ${BackCardLeft} {\r\n//     transform: ${({ $turn }) => {\r\n//       return $turn ? \"rotateY(0deg)\" : \"rotateY(180deg)\";\r\n//     }};\r\n//   }\r\n//   & ${BackCardRight} {\r\n//     transform: ${({ $turn }) => {\r\n//       return $turn ? \"rotateY(0deg)\" : \"rotateY(-180deg)\";\r\n//     }};\r\n//   }\r\n// `;\r\n\r\n// export const CardLeft = styled.div`\r\n//   width: 50%;\r\n//   @media (max-width: 760px) {\r\n//     width: 100%;\r\n//   }\r\n// `;\r\n\r\n// export const CardRight = styled.div`\r\n//   width: 50%;\r\n//   @media (max-width: 760px) {\r\n//     width: 100%;\r\n//   }\r\n// `;\r\n\r\n// export const FlexedCard = styled.div`\r\n//   display: flex;\r\n//   column-gap: 5rem;\r\n\r\n//   @media (max-width: 760px) {\r\n//     flex-direction: column;\r\n//     /* row-gap: 3rem; */\r\n//   }\r\n// `;\r\n\r\n// export const ReservationCard = styled.div`\r\n//   position: relative;\r\n//   z-index: 10;\r\n//   width: 100%;\r\n//   height: 45rem;\r\n//   perspective: 150rem;\r\n//   overflow: hidden;\r\n\r\n//   /* Apply transform with $turn as transient prop */\r\n//   & ${FrontCardLeft} {\r\n//     transform: ${({ $turn }) => ($turn ? \"rotateY(180deg)\" : \"rotateY(0deg)\")};\r\n//   }\r\n//   & ${FrontCardRight} {\r\n//     transform: ${({ $turn }) => ($turn ? \"rotateY(-180deg)\" : \"rotateY(0deg)\")};\r\n//   }\r\n\r\n//   & ${BackCardLeft} {\r\n//     transform: ${({ $turn }) => ($turn ? \"rotateY(0deg)\" : \"rotateY(180deg)\")};\r\n//   }\r\n//   & ${BackCardRight} {\r\n//     transform: ${({ $turn }) => ($turn ? \"rotateY(0deg)\" : \"rotateY(-180deg)\")};\r\n//   }\r\n// `;\r\n// import styled from \"styled-components\";\r\n\r\n// export const CardFace = styled.div`\r\n//   position: absolute;\r\n//   left: 0;\r\n//   top: 0;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   -webkit-backface-visibility: hidden;\r\n//   backface-visibility: hidden;\r\n//   transition: transform 0.8s ease;\r\n//   overflow: hidden;\r\n// `;\r\n\r\n// export const FrontCardLeft = styled(CardFace)``;\r\n\r\n// export const FrontCardRight = styled(CardFace)`\r\n//   /* border: 2px solid red; */\r\n// `;\r\n\r\n// export const BackCardLeft = styled(CardFace)``;\r\n// export const BackCardRight = styled(CardFace)``;\r\n\r\n// export const ReservationCard = styled.div`\r\n//   position: relative;\r\n//   z-index: 10;\r\n//   width: 100%;\r\n//   height: 45rem;\r\n//   perspective: 150rem;\r\n//   overflow: hidden;\r\n\r\n//   & ${FrontCardLeft} {\r\n//     transform: ${({ $turn }) => ($turn ? \"rotateY(180deg)\" : \"rotateY(0deg)\")};\r\n//   }\r\n//   & ${FrontCardRight} {\r\n//     transform: ${({ $turn }) => ($turn ? \"rotateY(-180deg)\" : \"rotateY(0deg)\")};\r\n//   }\r\n\r\n//   & ${BackCardLeft} {\r\n//     transform: ${({ $turn }) => ($turn ? \"rotateY(0deg)\" : \"rotateY(180deg)\")};\r\n//   }\r\n//   & ${BackCardRight} {\r\n//     transform: ${({ $turn }) => ($turn ? \"rotateY(0deg)\" : \"rotateY(-180deg)\")};\r\n//   }\r\n// `;\r\n// export const CardLeft = styled.div`\r\n//   width: 50%;\r\n//   @media (max-width: 760px) {\r\n//     width: 100%;\r\n//   }\r\n// `;\r\n// export const CardRight = styled.div`\r\n//   width: 50%;\r\n\r\n//   @media (max-width: 760px) {\r\n//     width: 100%;\r\n//   }\r\n// `;\r\n// export const FlexedCard = styled.div`\r\n//   display: flex;\r\n//   column-gap: 5rem;\r\n\r\n//   @media (max-width: 760px) {\r\n//     flex-direction: column;\r\n//     /* row-gap: 3rem; */\r\n//   }\r\n// `;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useFormik } from \"formik\";\r\n\r\nimport { TiShoppingCart } from \"react-icons/ti\";\r\n\r\nimport { makeReservationSchemas } from \"../schemas\";\r\n\r\nimport { Container } from \"../ui/Container\";\r\nimport { Content } from \"../ui/Content\";\r\nimport { Paragraph } from \"../ui/Paragraph\";\r\nimport CustomButton from \"../components/CustomButton\";\r\nimport { Button } from \"../ui/Button\";\r\nimport { LeftBackCard, RightBackCard } from \"./BackPageOfMakeReservation\";\r\nimport {\r\n  BackCardLeft,\r\n  BackCardRight,\r\n  CardLeft,\r\n  CardRight,\r\n  FlexedCard,\r\n  FrontCardLeft,\r\n  FrontCardRight,\r\n  ReservationCard,\r\n} from \"../components/FlippingCard\";\r\nimport { Heading } from \"../ui/Heading\";\r\nimport { Link } from \"react-router-dom\";\r\nimport toast from \"react-hot-toast\";\r\nimport { menuArr } from \"../Contexts/Menu/defaultMenusArray\";\r\nimport useCombinedContexts from \"../Contexts/CombinedContexts/useCombinedContexts\";\r\n\r\n// import { ZERO } from \"../ui/Constant\";\r\n\r\n// NOTE for the challenge of Select and option tags\r\n/*\r\nNOTE:\r\nThe native <option> tag inside a <select> element has limited styling capabilities and cannot be styled the same way as other HTML elements due to browser restrictions. For example, you cannot control the width of the individual <option> elements or apply complex layouts like flexbox to them. This is why creating a custom dropdown component is often necessary to achieve advanced styling and layout requirements.\r\nHowever, if you still prefer to use the native <select> and <option> elements and try to achieve the layout to some extent, you can make use of custom CSS for the <select> and control its appearance, though it won't be as flexible.\r\nExample Using Native <select> and <option>\r\nYou can style the <select> element and wrap it in a container with overflow handling, but keep in mind that individual <option> elements cannot be styled beyond some basic properties like font, color, and padding.\r\n\r\nLimitation\r\nEven with the custom styling, individual <option> elements within the <select> cannot be styled to have a custom width, complex layouts, or hover effects as you can with a custom dropdown component.\r\n\r\nAlternative Solution\r\nIf you need full control over the dropdown's appearance and behavior, creating a custom component using <div> and other HTML elements, as demonstrated in the previous examples, is the recommended approach. This gives you the flexibility to style and position each option as needed, without the limitations of the native <select> and <option> elements.\r\nThe purpose of the assessment\r\nThe primary purpose of the assessment is to check your knowledge and understanding of the key learning objectives of the course.  The assessment is designed to help you make sure that you can apply what you have learned. Most importantly, the assessment helps you establish which topics you have mastered and which topics require further focus before completing the course.\r\n\r\nWhat to expect from the peer review \r\nYou will combine the skills and knowledge that you applied throughout the course to write code to create a form that handles table bookings for the Little Lemon restaurant.  Your table bookings form will all be assessed in the peer review submission, and you will assess some of your peers' projects too.\r\n\r\nWhat to expect from the final graded quiz \r\nThe quiz only tests the topics you have already covered, so there shouldn't be any surprises. Please review the feedback on your answers and, where necessary, go back and work through the topics that require further attention. \r\n\r\nweb app and website:\r\nThe key difference between a website, and web application is the level of interactivity, and dynamic content. The easy way to remember this is that a website is more informative and a web application is more interactive.\r\n\r\ncss\r\n layout is one of the most important components of designing a good web page because layouts help divide a page into different sections, thus making the page more presentable.\r\n grid and flexbox: They added more flexibility and dimensionality with better options for fine tuning specific sections of a web page\r\n \r\n ui testing:UI testing is a complex area with many techniques and strategies used by developers. The strategies you will use will often be determined by business priority, customer requirements, and project timelines.\r\n Cross-device testing involves the manual or automated use of different devices to test the layout and behavior of an application. \r\n\r\n JS\r\n Defensive programming is all about assuming that all the arguments a function will receive are of the wrong type,  the wrong value or both.\r\n\r\n In programming, there is something known as the programming paradigms. You can think of this as a classification, a style or just a general way to write code.\r\n oop:revolves around the idea of organizing our programs using objects to group related data and functionality.\r\n This is in contrast to the functional programming approach, where the data used in the app needs to be kept separate from functions that operate on that data.\r\n REACT\r\n State is simply all the values of all the variables your app is working with at any given point in time.\r\n Hooks are functions that were introduced in React version 16.8. They let you hook into React state and lifestyle features from components\r\n // \r\n\r\n//The Capstone project at the center of this course is based on a scenario involving the restaurant Little Lemon. In particular, the owners of Little Lemon have received negative feedback on the reserve a table function on the Little Lemon website. Users are confused about how to use it and unhappy with how it looks and functions. That's where you come in. In this course, you will learn how to build a responsive web app and demonstrate multiple skills by coding a modern front end application that allows users to reserve a table for the Little Lemon restaurant. You will be guided through the process of building the app, combining all the skills and technologies you've learned throughout this program to solve the problem at hand. Now, you may be wondering how this course is structured. Well, the course consists of four modules: starting the project, project foundations, project functionality, and project assessment. In the first module, starting the project, you'll do exactly that. Get started with the capstone project. This will include a brief recap of and links to content in the React course you have already completed, you'll start by setting up a coding environment, a React project, and a Git repository for the project on GitHub so you are ready to proceed with the development phase of the project. You'll also briefly recap UX and UI linking to content in a previously completed course, principles of UX and UI. You will employ UX, UI methodologies in your project, including preparing the wireframes and applying design fundamentals using Figma. In Module 2, which covers the project foundations, you'll use semantic HTML, meta tags and Open Graph Protocol to create a modern HTML structure for the web app. You will also use CSS grid and other CSS styling to set up a responsive, clear, and inviting website. Not to mention your recap the basics of React. Module 3 is all about the functionality of your project. You'll code the table booking system using React. The importance of UX and form validation will be covered with an exercise where you will validate forms in your app and write unit tests. Plus accessibility and UX, UI usability evaluation will be covered along with an exercise in both to ensure your interface complies with both issues. In the final module, project assessment, you'll have the chance to reflect on all you have learned and your accomplishments. More specifically, you'll have the opportunity to perform a self-review of your project and a peer review of other learners solutions for the little lemon reserve a table web app assessing the projects in terms of usability, accessibility, design, and code. With all of this to look forward to, I'm sure you are eager to begin. Let's get started with your project.\r\n\r\n*/\r\n// Container for Reservation Section\r\nconst MakeReservationStyled = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: auto;\r\n  padding: 0;\r\n  /* border: 3px solid red; */\r\n`;\r\n\r\n// Form Container\r\nconst Form = styled.form`\r\n  position: relative;\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n\r\n// Individual Radio Button\r\nconst RadioButton = styled.div`\r\n  margin-top: 2rem;\r\n  margin-bottom: 2rem;\r\n  display: flex;\r\n  justify-content: start;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n\r\n  @media (max-width: 450px) {\r\n    width: 100%;\r\n    padding-left: 0rem;\r\n    gap: 0rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\n// Radio Label\r\nconst Radiolabel = styled.label`\r\n  width: 55%;\r\n  position: relative;\r\n  cursor: pointer;\r\n  font-size: 1.8rem;\r\n  color: var(--pureWhite);\r\n  font-family: var(--karla);\r\n  font-weight: var(--bold);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: start;\r\n\r\n  @media (max-width: 450px) {\r\n    width: 100%;\r\n    justify-content: start;\r\n  }\r\n`;\r\n\r\n// Radio Input\r\nconst RadioInput = styled.input`\r\n  background-color: var(--deepGreen);\r\n  border: 1px solid var(--pureWhite);\r\n  display: none;\r\n\r\n  &:checked + ${Radiolabel} > span::after {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\n// Span for Radio Input Customization\r\nconst RadioSpan = styled.span`\r\n  position: absolute;\r\n  background-color: var(--deepGreen);\r\n  border: 2px solid var(--pureWhite);\r\n  height: 2.2rem;\r\n  width: 2.2rem;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  right: 0;\r\n  top: 0.25rem;\r\n\r\n  &::after {\r\n    content: \"\";\r\n    display: block;\r\n    height: 0.8rem;\r\n    width: 0.8rem;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: var(--pureWhite);\r\n    opacity: 0;\r\n    transition: opacity 0.2s;\r\n\r\n    @media (max-width: 450px) {\r\n      height: 0.8rem;\r\n      width: 0.8rem;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    left: 50%;\r\n    height: 1.8rem;\r\n    width: 1.8rem;\r\n  }\r\n`;\r\n\r\n// =======================Container for Bottom Section=====================\r\nconst BottomContainerStyled = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: auto;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  column-gap: 5rem;\r\n  padding: 2rem;\r\n\r\n  @media (max-width: 450px) {\r\n    padding-left: 4rem;\r\n  }\r\n`;\r\n\r\n// Selected Menu Image Styled\r\nconst SelectedmenuImageStyled = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  /* position: relative; */\r\n  cursor: pointer;\r\n\r\n  & > img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    border-radius: 1rem;\r\n  }\r\n\r\n  & > span {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: absolute;\r\n    right: 2rem;\r\n    top: 2rem;\r\n    background-color: red;\r\n    color: var(--pureWhite);\r\n    border-radius: 50%;\r\n    font-family: var(--karla);\r\n\r\n    @media (max-width: 450px) {\r\n      left: 0.5rem;\r\n    }\r\n  }\r\n`;\r\n// const SelectedmenuImageContainer = styled.div`\r\n//   position: absolute;\r\n//   z-index: 10;\r\n//   width: 23rem;\r\n//   height: 23rem;\r\n//   padding: 1rem 0;\r\n//   transition: all 0.2s;\r\n\r\n//   /* Centralizing the element */\r\n//   /* top: 50%; */\r\n//   /* left: 50%; */\r\n//   top: 14rem;\r\n//   right: ${({ index }) => index * 7}rem;\r\n//   transform: translate(-50%, -50%);\r\n\r\n//   /* left: ${({ index }) => index * 1}rem; */\r\n\r\n//   &:hover {\r\n//     z-index: 20;\r\n//   }\r\n\r\n//   @media (max-width: 450px) {\r\n//     width: 16rem;\r\n//     height: 23rem;\r\n//     transform: translate(-50%, -50%);\r\n//     margin-right: 0%;\r\n//     margin-left: ${({ index }) => index * 3}rem;\r\n//   }\r\n// `;\r\n\r\nconst SelectedmenuImageContainer = styled.div`\r\n  position: absolute;\r\n  z-index: 10;\r\n  width: 23rem;\r\n  height: 23rem;\r\n  top: 14rem;\r\n  transform: translate(-50%, -50%);\r\n  padding: 1rem 0;\r\n  transition: all 0.2s;\r\n  right: ${({ index }) => index * 7}rem;\r\n  /* left: ${({ index }) => index * 5}rem; */\r\n\r\n  &:hover {\r\n    z-index: 20;\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    width: 16rem;\r\n    height: 23rem;\r\n    left: 20%;\r\n    transform: translate(-50%, -50%);\r\n    margin-right: 0%;\r\n    margin-left: ${({ index }) => index * 3}rem;\r\n  }\r\n`;\r\nconst MenusContainer = styled.div`\r\n  position: relative;\r\n  height: ${({ $empty }) => ($empty ? \"37rem\" : \"23rem\")};\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &:hover ${SelectedmenuImageContainer}:not(:hover) {\r\n    z-index: 10;\r\n    //  transform: scale(0.95) translateY(0);\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  position: ${({ $next }) => ($next ? \"absolute\" : \"relative\")};\r\n  bottom: ${({ $next }) => ($next ? \"2rem\" : \"0\")};\r\n  left: ${({ $next }) => ($next ? \"50%\" : \"\")};\r\n  transform: ${({ $next }) => ($next ? \"translate(-50%,-50%)\" : \"\")};\r\n  z-index: 30;\r\n  display: inline-block;\r\n  text-align: center;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Headingtext = styled.div`\r\n  padding-top: 2rem;\r\n`;\r\n\r\nconst HidetheRightRadio = styled.div`\r\n  display: block;\r\n\r\n  @media (max-width: 760px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst ShowtheRightRadio = styled.div`\r\n  display: none;\r\n  @media (max-width: 760px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst BottomBtnsContainer = styled.div`\r\n  position: absolute;\r\n  bottom: 2rem;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  @media (max-width: 450px) {\r\n    bottom: -2rem;\r\n  }\r\n`;\r\nconst CartContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: -5rem;\r\n\r\n  @media (max-width: 450px) {\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nfunction MakeReservation() {\r\n  const [turn, setTurn] = useState(false);\r\n  const {\r\n    state,\r\n    dispatch,\r\n    resetHandler,\r\n    setContent,\r\n    content,\r\n    formSubmitted,\r\n    setFormSubmitted,\r\n\r\n    menus,\r\n    selectedMenuHandler,\r\n    isAnyItemSelected,\r\n    setremount,\r\n    setUserBookedData,\r\n    // setUserSelectedItems,\r\n    setMenus,\r\n  } = useCombinedContexts();\r\n  // const {\r\n  //   state,\r\n  //   dispatch,\r\n  //   resetHandler,\r\n  //   setContent,\r\n  //   content,\r\n  //   formSubmitted,\r\n  //   setFormSubmitted,\r\n  // } = useReservationsContext();\r\n  // const {\r\n  //   menus,\r\n  //   selectedMenuHandler,\r\n  //   isAnyItemSelected,\r\n  //   setremount,\r\n  //   setUserBookedData,\r\n  //   // setUserSelectedItems,\r\n  //   setMenus,\r\n  // } = useMenusContext();\r\n  // console.log(isAnyItemSelected);\r\n\r\n  // const { date, occasion, dinner, time } = state;\r\n\r\n  //Dynamically update content when state changes\r\n  useEffect(() => {\r\n    setContent((prevContent) =>\r\n      prevContent.map((item) => ({\r\n        ...item,\r\n        value: state[item.name] || item.placeholder,\r\n      }))\r\n    );\r\n    // setremount((change) => !change);\r\n  }, [state, setContent, setremount]);\r\n\r\n  const formik = useFormik({\r\n    initialValues: state,\r\n    validationSchema: makeReservationSchemas,\r\n    validateOnBlur: true,\r\n    validateOnChange: true,\r\n    onSubmit: async (values, { setSubmitting }) => {\r\n      const errors = formik.validateForm(values);\r\n\r\n      if (Object.keys(errors).length === 0) {\r\n        try {\r\n          toast.success(\"Orders submitted successfully! 🎉\");\r\n          // setUserSelectedItems([]);\r\n          setUserBookedData((prevData) => [...prevData, values]);\r\n          setFormSubmitted(true);\r\n          resetHandler(); // Clear form\r\n          setMenus(menuArr);\r\n          // clearSelectedArray(orderArray);\r\n        } catch (error) {\r\n          console.error(\"Error during form submission:\", error);\r\n          toast.error(\"Something went wrong. Please try again.\");\r\n        }\r\n      } else {\r\n        Object.entries(errors).forEach(([field, message]) =>\r\n          toast.error(`${field}: ${message}`)\r\n        );\r\n        setFormSubmitted(false);\r\n      }\r\n\r\n      setSubmitting(false);\r\n    },\r\n  });\r\n\r\n  // Destructure required properties\r\n  const { errors, handleBlur, handleSubmit, touched, values, isSubmitting } =\r\n    formik;\r\n\r\n  const handleFieldChange = (e) => {\r\n    const { name, value } = e.target;\r\n    dispatch({ type: name, payload: value });\r\n    formik.handleChange(e);\r\n    setFormSubmitted(false);\r\n  };\r\n  const turnCardHandler = () => {\r\n    setTurn((open) => !open);\r\n  };\r\n  const dataArr = [\r\n    {\r\n      label: \"First Name\",\r\n      id: \"firstName\",\r\n      inputType: \"text\",\r\n      placeholder: \"Oluwaseun\",\r\n    },\r\n    {\r\n      label: \"Last Name\",\r\n      id: \"lastName\",\r\n      inputType: \"text\",\r\n      placeholder: \"Sodeeq\",\r\n    },\r\n    {\r\n      label: \"Email\",\r\n      id: \"email\",\r\n      inputType: \"email\",\r\n      placeholder: \"ademolaoluwaseun90@gmail.com\",\r\n    },\r\n    {\r\n      label: \"Phone Number\",\r\n      id: \"tel\",\r\n      inputType: \"tel\",\r\n      placeholder: \"8149428278\",\r\n      selectOptns: [\r\n        { code: \"+234\", countryAbbrev: \"NG\", country: \"Nigeria\" },\r\n        {\r\n          code: \"+1\",\r\n          countryAbbrev: \"US\",\r\n          country: \"United States of America\",\r\n        },\r\n        { code: \"+91\", countryAbbrev: \"IN\", country: \"India\" },\r\n        { code: \"+44\", countryAbbrev: \"GB\", country: \"Great Britain\" },\r\n        { code: \"+86\", countryAbbrev: \"CN\", country: \"China\" },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const orderArray =\r\n    menus\r\n      .flatMap((category) => {\r\n        const { generalName, list } = category;\r\n        return list.map((menu) => ({ ...menu, generalName }));\r\n      })\r\n      .filter((item) => item.selected)\r\n      .map((menu, i) => {\r\n        const { id, generalName, image, name } = menu;\r\n        return (\r\n          <SelectedmenuImageContainer index={i} key={id}>\r\n            <SelectedmenuImageStyled>\r\n              <img src={image} alt={name} />\r\n              <span onClick={() => selectedMenuHandler(id, generalName)}>\r\n                X\r\n              </span>\r\n            </SelectedmenuImageStyled>\r\n          </SelectedmenuImageContainer>\r\n        );\r\n      }) || [];\r\n\r\n  const cardLeftCards = content.filter(\r\n    (customSelect) =>\r\n      customSelect.name === \"date\" || customSelect.name === \"occasion\"\r\n  );\r\n\r\n  const cardRightCards = content.filter(\r\n    (customSelect) =>\r\n      customSelect.name === \"dinner\" || customSelect.name === \"time\"\r\n  );\r\n\r\n  return (\r\n    <Container as=\"section\" type=\"makeReservation\">\r\n      <Container as=\"div\" type=\"reservationHeading\">\r\n        <Content>\r\n          <Headingtext>\r\n            <Heading as=\"h1\">Reservations</Heading>\r\n          </Headingtext>\r\n        </Content>\r\n      </Container>\r\n      <Form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          handleSubmit(e);\r\n          setFormSubmitted(true);\r\n\r\n          if (Object.keys(errors).length) {\r\n            Object.keys(errors).forEach((field) => {\r\n              toast.error(errors[field]);\r\n            });\r\n          }\r\n        }}\r\n      >\r\n        <Container as=\"div\" type=\"makeReservationTop\">\r\n          <Content>\r\n            <>\r\n              <MakeReservationStyled>\r\n                <FlexedCard>\r\n                  <CardLeft>\r\n                    <ReservationCard turn={turn}>\r\n                      <FrontCardLeft>\r\n                        <ShowtheRightRadio>\r\n                          <RadioButton>\r\n                            <RadioInput\r\n                              type=\"radio\"\r\n                              name=\"seating\"\r\n                              id=\"outdoor\"\r\n                              value=\"outdoor\"\r\n                              checked={values.seating === \"outdoor\"}\r\n                              onChange={handleFieldChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                            <Radiolabel htmlFor=\"outdoor\">\r\n                              Outdoor seating <RadioSpan />\r\n                            </Radiolabel>\r\n                            {errors.seating &&\r\n                              touched.seating &&\r\n                              formSubmitted && (\r\n                                <Paragraph fontSize=\"large\" color=\"red\">\r\n                                  {errors.seating}\r\n                                </Paragraph>\r\n                              )}\r\n                          </RadioButton>\r\n                        </ShowtheRightRadio>\r\n\r\n                        <RadioButton>\r\n                          <RadioInput\r\n                            type=\"radio\"\r\n                            name=\"seating\"\r\n                            id=\"indoor\"\r\n                            value=\"indoor\"\r\n                            checked={values.seating === \"indoor\"}\r\n                            onChange={handleFieldChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                          <Radiolabel htmlFor=\"indoor\">\r\n                            Indoor seating <RadioSpan />\r\n                          </Radiolabel>\r\n                          {errors.seating &&\r\n                            touched.seating &&\r\n                            formSubmitted && (\r\n                              <Paragraph fontSize=\"large\" color=\"red\">\r\n                                {errors.seating}\r\n                              </Paragraph>\r\n                            )}\r\n                        </RadioButton>\r\n\r\n                        <CustomButton\r\n                          handleBlur={handleBlur}\r\n                          handleChange={handleFieldChange}\r\n                          errors={errors}\r\n                          dispatch={dispatch}\r\n                          content={cardLeftCards}\r\n                          formSubmitted={formSubmitted}\r\n                          values={values}\r\n                        />\r\n                      </FrontCardLeft>\r\n                      <BackCardLeft>\r\n                        <LeftBackCard\r\n                          values={values}\r\n                          handleChange={handleFieldChange}\r\n                          errors={errors}\r\n                          touched={touched}\r\n                          turn={turn}\r\n                          dataArr={dataArr}\r\n                          turnCardHandler={turnCardHandler}\r\n                          formSubmitted={formSubmitted}\r\n                        />\r\n                      </BackCardLeft>\r\n                    </ReservationCard>\r\n                  </CardLeft>\r\n\r\n                  <CardRight>\r\n                    <ReservationCard turn={turn}>\r\n                      <FrontCardRight>\r\n                        <HidetheRightRadio>\r\n                          <RadioButton>\r\n                            <RadioInput\r\n                              type=\"radio\"\r\n                              name=\"seating\"\r\n                              id=\"Outdoor\"\r\n                              value=\"Outdoor\"\r\n                              checked={values.seating === \"Outdoor\"}\r\n                              onChange={handleFieldChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                            <Radiolabel htmlFor=\"Outdoor\">\r\n                              Outdoor seating <RadioSpan />\r\n                            </Radiolabel>\r\n                            {errors.seating &&\r\n                              touched.seating &&\r\n                              formSubmitted && (\r\n                                <Paragraph fontSize=\"large\" color=\"red\">\r\n                                  {errors.seating}\r\n                                </Paragraph>\r\n                              )}\r\n                          </RadioButton>\r\n                        </HidetheRightRadio>\r\n\r\n                        <CustomButton\r\n                          handleBlur={handleBlur}\r\n                          handleChange={handleFieldChange}\r\n                          errors={errors}\r\n                          dispatch={dispatch}\r\n                          content={cardRightCards}\r\n                          formSubmitted={formSubmitted}\r\n                          values={values}\r\n                        />\r\n                      </FrontCardRight>\r\n                      <BackCardRight>\r\n                        <RightBackCard\r\n                          values={values}\r\n                          handleChange={handleFieldChange}\r\n                          errors={errors}\r\n                          touched={touched}\r\n                          turn={turn}\r\n                          dataArr={dataArr}\r\n                          handleBlur={handleBlur}\r\n                          formSubmitted={formSubmitted}\r\n                        />\r\n                      </BackCardRight>\r\n                    </ReservationCard>\r\n                  </CardRight>\r\n\r\n                  {/* <CardLeft errors={errors}> */}\r\n                  {/* <CardLeft>\r\n                    <ReservationCard $turn={turn}>\r\n                      <FrontCardLeft>\r\n                        <ShowtheRightRadio>\r\n                          <RadioButton>\r\n                            <RadioInput\r\n                              type=\"radio\"\r\n                              name=\"seating\"\r\n                              id=\"outdoor\"\r\n                              value=\"outdoor\"\r\n                              checked={values.seating === \"outdoor\"}\r\n                              onChange={handleFieldChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                            <Radiolabel htmlFor=\"outdoor\">\r\n                              Outdoor seating <RadioSpan />\r\n                            </Radiolabel>\r\n                            {errors.seating &&\r\n                              touched.seating &&\r\n                              formSubmitted && (\r\n                                <Paragraph fontSize=\"large\" color=\"red\">\r\n                                  {errors.seating}\r\n                                </Paragraph>\r\n                              )}\r\n                          </RadioButton>\r\n                        </ShowtheRightRadio>\r\n\r\n                        <RadioButton>\r\n                          <RadioInput\r\n                            type=\"radio\"\r\n                            name=\"seating\"\r\n                            id=\"indoor\"\r\n                            value=\"indoor\"\r\n                            checked={values.seating === \"indoor\"}\r\n                            onChange={handleFieldChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                          <Radiolabel htmlFor=\"indoor\">\r\n                            Indoor seating <RadioSpan />\r\n                          </Radiolabel>\r\n                          {errors.seating &&\r\n                            touched.seating &&\r\n                            formSubmitted && (\r\n                              <Paragraph fontSize=\"large\" color=\"red\">\r\n                                {errors.seating}\r\n                              </Paragraph>\r\n                            )}\r\n                        </RadioButton>\r\n                        <CustomButton\r\n                          handleBlur={handleBlur}\r\n                          handleChange={handleFieldChange}\r\n                          errors={errors}\r\n                          dispatch={dispatch}\r\n                          content={cardLeftCards}\r\n                          formSubmitted={formSubmitted}\r\n                          values={values}\r\n                        />\r\n                      </FrontCardLeft>\r\n                      <BackCardLeft>\r\n                        <LeftBackCard\r\n                          values={values}\r\n                          handleChange={handleFieldChange}\r\n                          errors={errors}\r\n                          touched={touched}\r\n                          $turn={turn}\r\n                          dataArr={dataArr}\r\n                          turnCardHandler={turnCardHandler}\r\n                          formSubmitted={formSubmitted}\r\n                        />\r\n                      </BackCardLeft>\r\n                    </ReservationCard>\r\n                  </CardLeft>\r\n\r\n                  <CardRight>\r\n                    <ReservationCard $turn={turn}>\r\n                      <FrontCardRight>\r\n                        <HidetheRightRadio>\r\n                          <RadioButton>\r\n                            <RadioInput\r\n                              type=\"radio\"\r\n                              name=\"seating\"\r\n                              id=\"Outdoor\"\r\n                              value=\"Outdoor\"\r\n                              checked={values.seating === \"Outdoor\"}\r\n                              onChange={handleFieldChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                            <Radiolabel htmlFor=\"Outdoor\">\r\n                              Outdoor seating <RadioSpan />\r\n                            </Radiolabel>\r\n                            {errors.seating &&\r\n                              touched.seating &&\r\n                              formSubmitted && (\r\n                                <Paragraph fontSize=\"large\" color=\"red\">\r\n                                  {errors.seating}\r\n                                </Paragraph>\r\n                              )}\r\n                          </RadioButton>\r\n                        </HidetheRightRadio>\r\n\r\n                        <CustomButton\r\n                          handleBlur={handleBlur}\r\n                          handleChange={handleFieldChange}\r\n                          errors={errors}\r\n                          dispatch={dispatch}\r\n                          content={cardRightCards}\r\n                          formSubmitted={formSubmitted}\r\n                          values={values}\r\n                        />\r\n                      </FrontCardRight>\r\n                      <BackCardRight>\r\n                        <RightBackCard\r\n                          values={values}\r\n                          // handleChange={handleChange}\r\n                          handleChange={handleFieldChange}\r\n                          errors={errors}\r\n                          touched={touched}\r\n                          $turn={turn}\r\n                          dataArr={dataArr}\r\n                          handleBlur={handleBlur}\r\n                          formSubmitted={formSubmitted}\r\n                        />\r\n                      </BackCardRight>\r\n                    </ReservationCard>\r\n                  </CardRight> */}\r\n                </FlexedCard>\r\n              </MakeReservationStyled>\r\n            </>\r\n            <ButtonContainer $next={Boolean(turn)}>\r\n              <Button\r\n                $textColor=\"deepGreen\"\r\n                $backgroundColor=\"pureWhite\"\r\n                type=\"button\"\r\n                onClick={turnCardHandler}\r\n              >\r\n                Next &gt;&gt;&gt;\r\n              </Button>\r\n            </ButtonContainer>\r\n          </Content>\r\n        </Container>\r\n\r\n        <Container as=\"div\" type=\"makeReservationBottom\">\r\n          <Content>\r\n            <BottomContainerStyled>\r\n              {orderArray.length > 0 && (\r\n                <Paragraph\r\n                  color=\"deepGreen\"\r\n                  fontFamily=\"markazi\"\r\n                  fontWeight=\"deepBold\"\r\n                  fontSize=\"xxxlarge\"\r\n                >\r\n                  {orderArray.length}{\" \"}\r\n                  {orderArray.length === 1 ? \"item\" : \"items\"}{\" \"}\r\n                  {orderArray.length === 1 ? \"is\" : \"are\"} selected!\r\n                </Paragraph>\r\n              )}\r\n              <MenusContainer $empty={orderArray.length}>\r\n                {orderArray.length === 0 ? (\r\n                  <CartContainer>\r\n                    <TiShoppingCart\r\n                      style={{ fontSize: \"5rem\", color: \"var(--deepGreen)\" }}\r\n                    />\r\n                    <Paragraph\r\n                      color=\"deepGreen\"\r\n                      fontFamily=\"markazi\"\r\n                      fontWeight=\"deepBold\"\r\n                      fontSize=\"xxxlarge\"\r\n                    >\r\n                      Kindly make an Order!\r\n                    </Paragraph>\r\n                  </CartContainer>\r\n                ) : (\r\n                  // <BoxesContainer />\r\n                  // <BoxesContainer menuArray={menuArray} />\r\n                  <div>{orderArray}</div>\r\n                )}\r\n              </MenusContainer>\r\n              <BottomBtnsContainer>\r\n                <ButtonContainer>\r\n                  {isAnyItemSelected.length ? (\r\n                    <Button disabled={isSubmitting} type=\"submit\">\r\n                      Confirm Reservation\r\n                    </Button>\r\n                  ) : (\r\n                    <Link to=\"/orderonline\">\r\n                      <Button disabled={isSubmitting} type=\"submit\">\r\n                        Go to Menu\r\n                      </Button>\r\n                    </Link>\r\n                  )}\r\n                </ButtonContainer>\r\n              </BottomBtnsContainer>\r\n            </BottomContainerStyled>\r\n          </Content>\r\n        </Container>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MakeReservation;\r\n\r\n/*\r\n\r\n  // // Formik configuration\r\n\r\n  // // Formik configuration\r\n  // const { errors, handleBlur, handleSubmit, touched, values, isSubmitting } =\r\n  //   useFormik({\r\n  //     initialValues: state, // Sync with initial context state\r\n  //     validationSchema: makeReservationSchemas,\r\n  //     onSubmit: (values, { resetForm }) => {\r\n  //       try {\r\n  //         setUserBookedData((prevData) => [...prevData, values]); // Save booking\r\n  //         resetHandler(); // Reset context state\r\n  //         resetForm(); // Reset Formik state\r\n  //         menus.forEach((category) => {\r\n  //           category.list.forEach((item) => {\r\n  //             item.selected = false; // Unselect each item\r\n  //           });\r\n  //         });\r\n  //         toast.success(\"Reservation successfully made!\");\r\n  //         setUserSelectedItems([]);\r\n\r\n  //         setFormSubmitted(false);\r\n  //         setremount((val) => val + 1);\r\n  //       } catch (error) {\r\n  //         // setremount((change) => !change);\r\n  //         setremount((val) => val - 1);\r\n  //         setFormSubmitted(true);\r\n\r\n  //         //console.error(\"Submission Error:\", error); // Log error details\r\n  //         toast.error(\"Failed to make reservation. Please try again.\");\r\n  //       }\r\n  //     },\r\n  //     onSubmit: (values, { resetForm }) => {\r\n  //       try {\r\n  //         // Handle successful submission\r\n  //         setUserBookedData((prevData) => [...prevData, values]);\r\n  //         resetHandler();\r\n  //         // resetForm();\r\n  //         toast.success(\"Reservation successfully made!\");\r\n  //         //     //     setMenus(menuArr);\r\n  //       } catch (error) {\r\n  //         toast.error(\"Failed to make reservation. Please try again.\");\r\n  //       }\r\n  // });\r\n\r\n  // Unified state and Formik field update\r\n  // const handleFieldChange = (e) => {\r\n  // const handleFieldChange = (e) => {\r\n  //   const { name, value } = e.target;\r\n  //   dispatch({ type: name, payload: value }); // Update context state\r\n  //   values[name] = value; // Ensure Formik state is in sync\r\n  //   setFormSubmitted(false);\r\n\r\n  //   // setremount((val) => val + 1);\r\n  // };\r\n  // Formik initialization\r\n\r\n  // const clearSelectedArray = menus\r\n  //   .flatMap((category) => category.list)\r\n  //   .some((item) => item.selected);\r\n  // console.log(clearSelectedArray);\r\n  \r\n// function MakeReservation() {\r\n//   const {\r\n//     state,\r\n//     dispatch,\r\n//     initialState,\r\n//     resetHandler,\r\n//     formSubmitted,\r\n//     setFormSubmitted,\r\n//     setContent,\r\n//     content,\r\n//   } = useReservationsContext();\r\n\r\n//   const {\r\n//     menus,\r\n//     selectedMenuHandler,\r\n//     setUserBookedData,\r\n//     isAnyItemSelected,\r\n//     // setUserSelectedItems,\r\n//     // setMenus,\r\n//   } = useMenusContext();\r\n//   console.log(menuArr);\r\n//   // const { date, occasion, dinner, time } = state;\r\n//   const [turn, setTurn] = useState(false);\r\n//   // console.log(date, occasion, dinner, time);\r\n\r\n//   // const [content, setContent] = useState([\r\n//   //   {\r\n//   //     currentID: 0,\r\n//   //     label: \"Date\",\r\n//   //     beforeIcon: <CiCalendar style={{ fontSize: \"3rem\", color: \"inherit\" }} />,\r\n//   //     value: state.date || \"Select Date\",\r\n//   //     afterIcon: (\r\n//   //       <RiArrowDropDownLine style={{ fontSize: \"3.4rem\", color: \"inherit\" }} />\r\n//   //     ),\r\n//   //     inputType: \"input\",\r\n//   //     name: \"date\",\r\n//   //     id: \"date\",\r\n//   //     placeholder: \"Select Date\",\r\n//   //   },\r\n//   //   {\r\n//   //     currentID: 3,\r\n//   //     label: \"Number of Diners\",\r\n//   //     beforeIcon: (\r\n//   //       <IoPersonOutline style={{ fontSize: \"3rem\", color: \"inherit\" }} />\r\n//   //     ),\r\n//   //     value: state.dinner || \"No. of Diners\",\r\n//   //     afterIcon: (\r\n//   //       <RiArrowDropDownLine style={{ fontSize: \"3.4rem\", color: \"inherit\" }} />\r\n//   //     ),\r\n//   //     inputType: \"select\",\r\n//   //     options: [\r\n//   //       \"1 Diner\",\r\n//   //       \"2 Diners\",\r\n//   //       \"3 Diners\",\r\n//   //       \"4 Diners\",\r\n//   //       \"5 Diners\",\r\n//   //       \"6 Diners\",\r\n//   //       \"7 Diners\",\r\n//   //       \"8 Diners\",\r\n//   //       \"9 Diners\",\r\n//   //       \"10 Diners\",\r\n//   //     ],\r\n//   //     name: \"dinner\",\r\n//   //     id: \"dinner\",\r\n//   //     placeholder: \"No. of Diners\",\r\n//   //   },\r\n\r\n//   //   {\r\n//   //     currentID: 1,\r\n//   //     label: \"Time\",\r\n//   //     beforeIcon: (\r\n//   //       <LuAlarmClock style={{ fontSize: \"3rem\", color: \"inherit\" }} />\r\n//   //     ),\r\n//   //     value: state.time || \"Select Time\",\r\n//   //     afterIcon: (\r\n//   //       <RiArrowDropDownLine style={{ fontSize: \"3.4rem\", color: \"inherit\" }} />\r\n//   //     ),\r\n//   //     inputType: \"select\",\r\n//   //     options: [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"],\r\n//   //     name: \"time\",\r\n//   //     id: \"time\",\r\n//   //     placeholder: \"Select Time\",\r\n//   //   },\r\n//   //   {\r\n//   //     currentID: 2,\r\n//   //     label: \"Occasion\",\r\n//   //     beforeIcon: (\r\n//   //       <LiaGlassCheersSolid style={{ fontSize: \"3rem\", color: \"inherit\" }} />\r\n//   //     ),\r\n//   //     value: state.occasion || \"Occasion\",\r\n//   //     afterIcon: (\r\n//   //       <RiArrowDropDownLine style={{ fontSize: \"3.4rem\", color: \"inherit\" }} />\r\n//   //     ),\r\n//   //     inputType: \"select\",\r\n//   //     options: [\"Birthday\", \"Anniversary\", \"Graduation\", \"Other\"],\r\n//   //     name: \"occasion\",\r\n//   //     id: \"occasion\",\r\n//   //     placeholder: \"Occasion\",\r\n//   //   },\r\n//   // ]);\r\n\r\n//   useEffect(() => {\r\n//     // Update the content array when `state` changes\r\n//     setContent((prevContent) =>\r\n//       prevContent.map((item) => ({\r\n//         ...item,\r\n//         value: state[item.name] || item.placeholder,\r\n//       }))\r\n//     );\r\n//   }, [state, setContent]);\r\n//   const dataArr = [\r\n//     {\r\n//       label: \"First Name\",\r\n//       id: \"firstName\",\r\n//       inputType: \"text\",\r\n//       itemId: 0,\r\n//       placeholder: \"Oluwaseun\",\r\n//     },\r\n//     {\r\n//       label: \"Last Name\",\r\n//       id: \"lastName\",\r\n//       inputType: \"text\",\r\n//       itemId: 1,\r\n//       placeholder: \"Sodeeq\",\r\n//     },\r\n//     {\r\n//       label: \"Email\",\r\n//       id: \"email\",\r\n//       inputType: \"email\",\r\n//       itemId: 2,\r\n//       placeholder: \"ademolaoluwaseun90@gmail.com\",\r\n//     },\r\n//     {\r\n//       label: \"Phone Number\",\r\n//       id: \"tel\",\r\n//       inputType: \"tel\",\r\n//       itemId: 3,\r\n//       placeholder: \"8149428278\",\r\n//       selectOptns: [\r\n//         { code: \"+234\", countryAbbrev: \"NG\", country: \"Nigeria\" },\r\n//         { code: \"+1\", countryAbbrev: \"US\", country: \"United State of America\" },\r\n//         { code: \"+91\", countryAbbrev: \"IN\", country: \"India\" },\r\n//         { code: \"+44\", countryAbbrev: \"GB\", country: \"Great Britain\" },\r\n//         { code: \"+86\", countryAbbrev: \"CN\", country: \"China\" },\r\n//       ],\r\n//     },\r\n//   ];\r\n//   const turnCardHandler = () => {\r\n//     setTurn((open) => !open);\r\n//   };\r\n\r\n//   const {\r\n//     errors,\r\n//     handleBlur,\r\n//     handleChange,\r\n//     handleSubmit,\r\n//     isSubmitting,\r\n//     touched,\r\n//     values,\r\n//     // setFieldValue,\r\n//   } = useFormik({\r\n//     initialValues: initialState,\r\n//     validationSchema: makeReservationSchemas,\r\n//     // onSubmit: (values, { resetForm }) => {\r\n//     //   // setUserSelectedItems(orderArray);\r\n//     //   try {\r\n//     //     setUserBookedData((prevData) => [...prevData, values]);\r\n//     //     setUserSelectedItems(orderArray);\r\n//     //     resetHandler();\r\n//     //     toast.success(\"Reservation successfully made!\");\r\n\r\n//     //     setMenus(menuArr);\r\n//     //     resetForm();\r\n//     //     setUserSelectedItems([]);\r\n//     //     // console.log(values);\r\n//     //   } catch (error) {\r\n//     //     toast.error(\"Failed to make reservation. Please try again.\");\r\n//     //   }\r\n//     // },\r\n//     onSubmit: (values, { resetForm }) => {\r\n//       try {\r\n//         setUserBookedData((prevData) => [...prevData, values]);\r\n//         resetHandler(); // Reset state and content\r\n//         toast.success(\"Reservation successfully made!\");\r\n//       } catch (error) {\r\n//         toast.error(\"Failed to make reservation. Please try again.\");\r\n//       }\r\n//     },\r\n//   });\r\n\r\n//   const handleFieldChange = (e) => {\r\n//     dispatch({ type: e.target.name, payload: e.target.value });\r\n//     handleChange(e);\r\n//   };\r\n// const handleFieldChange = (e) => {\r\n//   dispatch({\r\n//     type: \"updateField\",\r\n//     payload: { name: e.target.name, value: e.target.value },\r\n//   });\r\n//   handleChange(e); // Formik handler\r\n// };\r\n// console.log(menus);\r\n\r\n*/\r\n// INITIAL APPROACH\r\n// import React, { useReducer, useState } from \"react\";\r\n// import styled from \"styled-components\";\r\n// import { Container } from \"../ui/Container\";\r\n// import { Content } from \"../ui/Content\";\r\n// import { Paragraph } from \"../ui/Paragraph\";\r\n// import CustomButton from \"../components/CustomButton\";\r\n// import { Button } from \"../ui/Button\";\r\n// import BackPageOfMakeReservation from \"./BackPageOfMakeReservation\";\r\n// import { useFormik } from \"formik\";\r\n// import { makeReservationSchemas } from \"../schemas\";\r\n// import useMenusContext from \"../Contexts/Menu/useMenusContext\";\r\n\r\n// // NOTE for the challenge ofSelect and option tags\r\n// /*\r\n// NOTE:\r\n// The native <option> tag inside a <select> element has limited styling capabilities and cannot be styled the same way as other HTML elements due to browser restrictions. For example, you cannot control the width of the individual <option> elements or apply complex layouts like flexbox to them. This is why creating a custom dropdown component is often necessary to achieve advanced styling and layout requirements.\r\n// However, if you still prefer to use the native <select> and <option> elements and try to achieve the layout to some extent, you can make use of custom CSS for the <select> and control its appearance, though it won't be as flexible.\r\n// Example Using Native <select> and <option>\r\n// You can style the <select> element and wrap it in a container with overflow handling, but keep in mind that individual <option> elements cannot be styled beyond some basic properties like font, color, and padding.\r\n\r\n// Limitation\r\n// Even with the custom styling, individual <option> elements within the <select> cannot be styled to have a custom width, complex layouts, or hover effects as you can with a custom dropdown component.\r\n\r\n// Alternative Solution\r\n// If you need full control over the dropdown's appearance and behavior, creating a custom component using <div> and other HTML elements, as demonstrated in the previous examples, is the recommended approach. This gives you the flexibility to style and position each option as needed, without the limitations of the native <select> and <option> elements.\r\n// The purpose of the assessment\r\n// The primary purpose of the assessment is to check your knowledge and understanding of the key learning objectives of the course.  The assessment is designed to help you make sure that you can apply what you have learned. Most importantly, the assessment helps you establish which topics you have mastered and which topics require further focus before completing the course.\r\n\r\n// What to expect from the peer review\r\n// You will combine the skills and knowledge that you applied throughout the course to write code to create a form that handles table bookings for the Little Lemon restaurant.  Your table bookings form will all be assessed in the peer review submission, and you will assess some of your peers' projects too.\r\n\r\n// What to expect from the final graded quiz\r\n// The quiz only tests the topics you have already covered, so there shouldn't be any surprises. Please review the feedback on your answers and, where necessary, go back and work through the topics that require further attention.\r\n\r\n// web app and website:\r\n// The key difference between a website, and web application is the level of interactivity, and dynamic content. The easy way to remember this is that a website is more informative and a web application is more interactive.\r\n\r\n// css\r\n//  layout is one of the most important components of designing a good web page because layouts help divide a page into different sections, thus making the page more presentable.\r\n//  grid and flexbox: They added more flexibility and dimensionality with better options for fine tuning specific sections of a web page\r\n\r\n//  ui testing:UI testing is a complex area with many techniques and strategies used by developers. The strategies you will use will often be determined by business priority, customer requirements, and project timelines.\r\n//  Cross-device testing involves the manual or automated use of different devices to test the layout and behavior of an application.\r\n\r\n//  JS\r\n//  Defensive programming is all about assuming that all the arguments a function will receive are of the wrong type,  the wrong value or both.\r\n\r\n//  In programming, there is something known as the programming paradigms. You can think of this as a classification, a style or just a general way to write code.\r\n//  oop:revolves around the idea of organizing our programs using objects to group related data and functionality.\r\n//  This is in contrast to the functional programming approach, where the data used in the app needs to be kept separate from functions that operate on that data.\r\n//  REACT\r\n//  State is simply all the values of all the variables your app is working with at any given point in time.\r\n//  Hooks are functions that were introduced in React version 16.8. They let you hook into React state and lifestyle features from components\r\n//  //\r\n\r\n// The Capstone project at the center of this course is based on a scenario involving the restaurant Little Lemon. In particular, the owners of Little Lemon have received negative feedback on the reserve a table function on the Little Lemon website. Users are confused about how to use it and unhappy with how it looks and functions. That's where you come in. In this course, you will learn how to build a responsive web app and demonstrate multiple skills by coding a modern front end application that allows users to reserve a table for the Little Lemon restaurant. You will be guided through the process of building the app, combining all the skills and technologies you've learned throughout this program to solve the problem at hand. Now, you may be wondering how this course is structured. Well, the course consists of four modules: starting the project, project foundations, project functionality, and project assessment. In the first module, starting the project, you'll do exactly that. Get started with the capstone project. This will include a brief recap of and links to content in the React course you have already completed, you'll start by setting up a coding environment, a React project, and a Git repository for the project on GitHub so you are ready to proceed with the development phase of the project. You'll also briefly recap UX and UI linking to content in a previously completed course, principles of UX and UI. You will employ UX, UI methodologies in your project, including preparing the wireframes and applying design fundamentals using Figma. In Module 2, which covers the project foundations, you'll use semantic HTML, meta tags and Open Graph Protocol to create a modern HTML structure for the web app. You will also use CSS grid and other CSS styling to set up a responsive, clear, and inviting website. Not to mention your recap the basics of React. Module 3 is all about the functionality of your project. You'll code the table booking system using React. The importance of UX and form validation will be covered with an exercise where you will validate forms in your app and write unit tests. Plus accessibility and UX, UI usability evaluation will be covered along with an exercise in both to ensure your interface complies with both issues. In the final module, project assessment, you'll have the chance to reflect on all you have learned and your accomplishments. More specifically, you'll have the opportunity to perform a self-review of your project and a peer review of other learners solutions for the little lemon reserve a table web app assessing the projects in terms of usability, accessibility, design, and code. With all of this to look forward to, I'm sure you are eager to begin. Let's get started with your project.\r\n\r\n// */\r\n// // Container for Reservation Section\r\n// const MakeReservationStyled = styled.div`\r\n//   width: 100%;\r\n//   height: auto;\r\n//   padding: 2rem 0 3rem;\r\n//   display: inline-block;\r\n//   /* overflow-y: hidden; */\r\n// `;\r\n\r\n// // Form Container\r\n// const Form = styled.form`\r\n//   position: relative;\r\n//   width: 100%;\r\n//   height: auto;\r\n// `;\r\n\r\n// // Radio Buttons Container\r\n// const RadioButtonsContainer = styled.div`\r\n//   width: 100%;\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//   gap: 5rem;\r\n\r\n//   @media (max-width: 450px) {\r\n//     flex-direction: column;\r\n//     gap: 0rem;\r\n//     margin-bottom: 2rem;\r\n//   }\r\n// `;\r\n\r\n// // Individual Radio Button\r\n// const RadioButton = styled.div`\r\n//   width: 48%;\r\n//   margin-top: 2rem;\r\n//   margin-bottom: 2rem;\r\n//   padding-left: 1rem;\r\n//   display: flex;\r\n//   justify-content: start;\r\n//   flex-direction: column;\r\n//   gap: 2rem;\r\n\r\n//   @media (max-width: 450px) {\r\n//     width: 100%;\r\n//     padding-left: 0rem;\r\n//     gap: 0rem;\r\n//     margin-bottom: 1rem;\r\n//   }\r\n// `;\r\n\r\n// // Radio Label\r\n// const Radiolabel = styled.label`\r\n//   width: 55%;\r\n//   position: relative;\r\n//   cursor: pointer;\r\n//   font-size: 1.8rem;\r\n//   color: var(--pureWhite);\r\n//   font-family: var(--karla);\r\n//   font-weight: var(--bold);\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: start;\r\n\r\n//   @media (max-width: 450px) {\r\n//     width: 100%;\r\n//     justify-content: start;\r\n//   }\r\n// `;\r\n\r\n// // Radio Input\r\n// const RadioInput = styled.input`\r\n//   background-color: var(--deepGreen);\r\n//   border: 1px solid var(--pureWhite);\r\n//   display: none;\r\n\r\n//   &:checked + ${Radiolabel} > span::after {\r\n//     opacity: 1;\r\n//   }\r\n// `;\r\n\r\n// // Span for Radio Input Customization\r\n// const RadioSpan = styled.span`\r\n//   position: absolute;\r\n//   background-color: var(--deepGreen);\r\n//   border: 2px solid var(--pureWhite);\r\n//   height: 2.2rem;\r\n//   width: 2.2rem;\r\n//   border-radius: 50%;\r\n//   display: inline-block;\r\n//   right: 0;\r\n//   top: 0.25rem;\r\n\r\n//   &::after {\r\n//     content: \"\";\r\n//     display: block;\r\n//     height: 0.8rem;\r\n//     width: 0.8rem;\r\n//     border-radius: 50%;\r\n//     position: absolute;\r\n//     top: 50%;\r\n//     left: 50%;\r\n//     transform: translate(-50%, -50%);\r\n//     background-color: var(--pureWhite);\r\n//     opacity: 0;\r\n//     transition: opacity 0.2s;\r\n\r\n//     @media (max-width: 450px) {\r\n//       height: 0.8rem;\r\n//       width: 0.8rem;\r\n//     }\r\n//   }\r\n\r\n//   @media (max-width: 450px) {\r\n//     left: 50%;\r\n//     height: 1.8rem;\r\n//     width: 1.8rem;\r\n//   }\r\n// `;\r\n\r\n// // Container for Bottom Section\r\n// const BottomContainerStyled = styled.div`\r\n//   position: relative;\r\n//   width: 100%;\r\n//   height: auto;\r\n//   margin: 0 auto;\r\n//   text-align: center;\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   justify-content: center;\r\n//   column-gap: 5rem;\r\n//   padding: 2rem;\r\n\r\n//   @media (max-width: 450px) {\r\n//     padding-left: 4rem;\r\n//   }\r\n// `;\r\n\r\n// // Selected Menu Image Styled\r\n// const SelectedmenuImageStyled = styled.div`\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   position: relative;\r\n//   cursor: pointer;\r\n\r\n//   & > img {\r\n//     width: 100%;\r\n//     height: 100%;\r\n//     object-fit: cover;\r\n//     border-radius: 1rem;\r\n//   }\r\n\r\n//   & > span {\r\n//     width: 2rem;\r\n//     height: 2rem;\r\n//     display: flex;\r\n//     align-items: center;\r\n//     justify-content: center;\r\n//     position: absolute;\r\n//     right: 2rem;\r\n//     top: 2rem;\r\n//     background-color: red;\r\n//     color: var(--pureWhite);\r\n//     border-radius: 50%;\r\n//     font-family: var(--karla);\r\n\r\n//     @media (max-width: 450px) {\r\n//       left: 0.5rem;\r\n//     }\r\n//   }\r\n// `;\r\n// const SelectedmenuImageContainer = styled.div`\r\n//   position: absolute;\r\n//   z-index: 10;\r\n//   width: 23rem;\r\n//   height: 23rem;\r\n//   top: 50%;\r\n//   transform: translate(-50%, -50%);\r\n//   padding: 1rem 0;\r\n//   transition: all 0.2s;\r\n\r\n//   right: ${({ index }) => index * 7}rem;\r\n\r\n//   &:hover {\r\n//     z-index: 20;\r\n//     /* transform: scale(1.05) translateY(-0.5rem); */\r\n//   }\r\n\r\n//   @media (max-width: 450px) {\r\n//     width: 16rem;\r\n//     height: 23rem;\r\n//     left: 20%;\r\n//     transform: translate(-50%, -50%);\r\n//     margin-right: 0%;\r\n//     margin-left: ${({ index }) => index * 3}rem;\r\n//   }\r\n// `;\r\n\r\n// const MenusContainer = styled.div`\r\n//   position: relative;\r\n//   display: inline-block;\r\n//   height: 25rem;\r\n//   width: 100%;\r\n//   margin: 0 auto;\r\n\r\n//   &:hover ${SelectedmenuImageContainer}:not(:hover) {\r\n//     z-index: 10;\r\n//     //  transform: scale(0.95) translateY(0);\r\n//   }\r\n// `;\r\n\r\n// const ButtonContainer = styled.div`\r\n//   display: inline-block;\r\n//   text-align: center;\r\n//   margin-top: 3rem;\r\n// `;\r\n\r\n// const reducer = (state, action) => {\r\n//   switch (action.type) {\r\n//     case \"date\":\r\n//       return { ...state, date: action.payload };\r\n//     case \"dinner\":\r\n//       return { ...state, dinner: action.payload };\r\n//     case \"occasion\":\r\n//       return { ...state, occasion: action.payload };\r\n//     case \"time\":\r\n//       return { ...state, time: action.payload };\r\n//     case \"seating\":\r\n//       return { ...state, seating: action.payload };\r\n//     case \"textArea\":\r\n//       return { ...state, textArea: action.payload };\r\n//     default:\r\n//       throw new Error(\"Unknown action type\");\r\n//   }\r\n// };\r\n\r\n// const initialState = {\r\n//   date: \"\",\r\n//   dinner: \"\",\r\n//   occasion: \"\",\r\n//   time: \"\",\r\n//   seating: \"\",\r\n//   firstName: \"\",\r\n//   lastName: \"\",\r\n//   phoneNumber: \"\",\r\n//   email: \"\",\r\n//   textArea: \"\",\r\n// };\r\n\r\n// // // Cards Style\r\n// // const CardFace = styled.css`\r\n// //   position: absolute;\r\n// //   left: 0;\r\n// //   top: 0;\r\n// //   width: 100%;\r\n// //   height: 100%;\r\n// //   -webkit-backface-visibility: hidden;\r\n// //   backface-visibility: hidden;\r\n// //   transition: all 0.8s ease;\r\n// //   overflow: hidden;\r\n// //   border: 2px solid blue;\r\n// // `;\r\n// // const FrontCard = styled.div`\r\n// //   ${CardFace}\r\n// //   background-color: var(--deepGreen);\r\n// //   /* z-index: 30; */\r\n// //   /* transform: ${({ turn }) => (turn ? \"rotateY(-180deg)\" : \"\")}; */\r\n// //   /* transform: ${({ turn }) => (turn ? \"rotateY(-180deg)\" : \"\")}; */\r\n// // `;\r\n// // const BackCard = styled.div`\r\n// //   ${CardFace}\r\n// //   background-color: var(--deepGreen);\r\n// //   transform: rotateY(180deg);\r\n// //   /* transform: ${({ turn }) =>\r\n// //     turn ? \"rotateY(0deg)\" : \"rotateY(-180deg)\"}; */\r\n// // `;\r\n\r\n// // const ReservationCard = styled.div`\r\n// //   position: relative;\r\n// //   height: 50rem;\r\n// //   height: auto;\r\n\r\n// //   /* perspective: 150rem;\r\n// //   -moz-perspective: 150rem; */\r\n\r\n// //   border: 5px solid red;\r\n\r\n// //   &:hover ${FrontCard} {\r\n// //     transform: rotateY(-180deg);\r\n// //   }\r\n// //   &:hover ${BackCard} {\r\n// //     transform: rotateY(0deg);\r\n// //   }\r\n// // `;\r\n\r\n// const CardFace = styled.div`\r\n//   position: absolute;\r\n//   left: 0;\r\n//   top: 0;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   -webkit-backface-visibility: hidden;\r\n//   backface-visibility: hidden;\r\n//   transition: transform 0.8s ease;\r\n//   overflow: hidden;\r\n// `;\r\n\r\n// const FrontCard = styled(CardFace)`\r\n//   background-color: var(--deepGreen);\r\n//   transform: rotateY(0deg);\r\n// `;\r\n\r\n// const BackCard = styled(CardFace)`\r\n//   background-color: var(--deepGreen);\r\n//   transform: rotateY(180deg);\r\n// `;\r\n\r\n// const ReservationCard = styled.div`\r\n//   position: relative;\r\n//   width: 100%;\r\n//   height: 50rem;\r\n//   perspective: 150rem;\r\n//   overflow: \"hidden\";\r\n\r\n//   /* &:hover ${FrontCard} {\r\n//     transform: rotateY(180deg);\r\n//   }\r\n\r\n//   &:hover ${BackCard} {\r\n//     transform: rotateY(0deg);\r\n//   } */\r\n// `;\r\n\r\n// const Headingtext = styled.span`\r\n//   margin-top: 3rem;\r\n// `;\r\n\r\n// function MakeReservation() {\r\n//   const { menus, selectedMenuHandler } = useMenusContext();\r\n//   const [state, dispatch] = useReducer(reducer, initialState);\r\n//   const { date, occasion, dinner, seating, time } = state;\r\n//   const [formSubmitted, setFormSubmitted] = useState(false);\r\n//   const [turn, setTurn] = useState(false);\r\n//   const [flip, setFlip] = useState(false);\r\n//   const err = true;\r\n\r\n//   const { errors, handleBlur, handleChange, handleSubmit, touched, values } =\r\n//     useFormik({\r\n//       initialValues: initialState,\r\n//       validationSchema: makeReservationSchemas,\r\n//       onSubmit: (values) => {\r\n//         // handle form submission\r\n//         console.log(values);\r\n\r\n//         if (3 > 2) {\r\n//           setTurn(true);\r\n//         }\r\n//       },\r\n//     });\r\n\r\n//   const handleFieldChange = (e) => {\r\n//     handleChange(e);\r\n//     dispatch({ type: e.target.name, payload: e.target.value });\r\n//   };\r\n\r\n//   const ZERO = 0;\r\n//   const makeAnOrderMsg = (\r\n//     <Paragraph\r\n//       color=\"deepGreen\"\r\n//       fontFamily=\"markazi\"\r\n//       fontweight=\"deepBold\"\r\n//       fontSize=\"xxxlarge\"\r\n//     >\r\n//       Kindly make an Order!\r\n//     </Paragraph>\r\n//   );\r\n\r\n//   const orderArray = menus\r\n//     .flatMap((category) => {\r\n//       const { generalName, list } = category;\r\n//       return list.map((menu) => ({ ...menu, generalName: generalName }));\r\n//     })\r\n//     .filter((item) => item.selected)\r\n//     .map((menu, i) => {\r\n//       const { id, generalName, image, name } = menu;\r\n//       return (\r\n//         <SelectedmenuImageContainer index={i} key={i}>\r\n//           <SelectedmenuImageStyled>\r\n//             <img src={image} alt={name} />\r\n//             <span onClick={() => selectedMenuHandler(id, generalName)}>X</span>\r\n//           </SelectedmenuImageStyled>\r\n//         </SelectedmenuImageContainer>\r\n//       );\r\n//     });\r\n\r\n//   console.log(errors.length);\r\n//   return (\r\n//     <Container as=\"section\" type=\"makeReservation\">\r\n//       <Container as=\"div\" type=\"reservationHeading\">\r\n//         <Content>\r\n//           <Paragraph\r\n//             fontSize=\"extraLarge\"\r\n//             color=\"yellow\"\r\n//             fontWeight=\"bold\"\r\n//             fontFamily=\"karla\"\r\n//           >\r\n//             <Headingtext>Reservations</Headingtext>\r\n//           </Paragraph>\r\n//         </Content>\r\n//       </Container>\r\n//       <Form\r\n//         onSubmit={(e) => {\r\n//           setFormSubmitted(true);\r\n//           handleSubmit(e);\r\n//         }}\r\n//       >\r\n//         <Container as=\"div\" type=\"makeReservationTop\">\r\n//           <Content>\r\n//             <ReservationCard>\r\n//               <FrontCard>\r\n//                 <MakeReservationStyled>\r\n//                   <>\r\n//                     <RadioButtonsContainer>\r\n//                       <RadioButton>\r\n//                         <RadioInput\r\n//                           type=\"radio\"\r\n//                           name=\"seating\"\r\n//                           id=\"indoor\"\r\n//                           value=\"indoor\"\r\n//                           onChange={handleFieldChange}\r\n//                           checked={seating === \"indoor\"}\r\n//                           onBlur={handleBlur}\r\n//                         />\r\n//                         <Radiolabel htmlFor=\"indoor\">\r\n//                           Indoor seating <RadioSpan />\r\n//                         </Radiolabel>\r\n//                         {formSubmitted && errors.seating && touched.seating && (\r\n//                           <Paragraph fontSize=\"large\" color=\"red\">\r\n//                             {errors.seating}\r\n//                           </Paragraph>\r\n//                         )}\r\n//                       </RadioButton>\r\n//                       <RadioButton>\r\n//                         <RadioInput\r\n//                           type=\"radio\"\r\n//                           name=\"seating\"\r\n//                           id=\"outdoor\"\r\n//                           value=\"outdoor\"\r\n//                           onChange={handleFieldChange}\r\n//                           checked={seating === \"outdoor\"}\r\n//                           onBlur={handleBlur}\r\n//                         />\r\n//                         <Radiolabel htmlFor=\"outdoor\">\r\n//                           Outdoor seating <RadioSpan />\r\n//                         </Radiolabel>\r\n//                         {formSubmitted && errors.seating && touched.seating && (\r\n//                           <Paragraph fontSize=\"large\" color=\"red\">\r\n//                             {errors.seating}\r\n//                           </Paragraph>\r\n//                         )}\r\n//                       </RadioButton>\r\n//                     </RadioButtonsContainer>\r\n//                     <CustomButton\r\n//                       handleBlur={handleBlur}\r\n//                       handleChange={handleChange}\r\n//                       date={date}\r\n//                       dinner={dinner}\r\n//                       occasion={occasion}\r\n//                       time={time}\r\n//                       errors={formSubmitted ? errors : {}}\r\n//                       dispatch={dispatch}\r\n//                     />\r\n//                   </>\r\n//                 </MakeReservationStyled>\r\n//                 {/* </Content>\r\n//             </Container> */}\r\n//               </FrontCard>\r\n\r\n//               <BackCard turn={turn}>\r\n//                 <BackPageOfMakeReservation\r\n//                   values={values}\r\n//                   handleChange={handleChange}\r\n//                   dispatch={dispatch}\r\n//                   errors={errors}\r\n//                   touched={touched}\r\n//                 />\r\n//               </BackCard>\r\n//             </ReservationCard>\r\n//           </Content>\r\n//         </Container>\r\n\r\n//         <Container as=\"div\" type=\"makeReservationBottom\">\r\n//           <Content>\r\n//             <BottomContainerStyled>\r\n//               {orderArray.length > ZERO && (\r\n//                 <Paragraph\r\n//                   color=\"deepGreen\"\r\n//                   fontFamily=\"markazi\"\r\n//                   fontweight=\"deepBold\"\r\n//                   fontSize=\"xxxlarge\"\r\n//                 >\r\n//                   {orderArray.length} items{\" \"}\r\n//                   {orderArray.length === 1 ? \"is\" : \"are\"} selected!\r\n//                 </Paragraph>\r\n//               )}\r\n//               <MenusContainer>\r\n//                 {orderArray.length === 0 ? makeAnOrderMsg : orderArray}\r\n//               </MenusContainer>\r\n//               <ButtonContainer>\r\n//                 {err ? (\r\n//                   <Button onClick={setFlip((open) => !open)}>Next &gt;&gt;&gt; </Button>\r\n//                 ) : (\r\n//                   <Button>Confirm Reservation</Button>\r\n//                 )}\r\n//               </ButtonContainer>\r\n//             </BottomContainerStyled>\r\n//           </Content>\r\n//         </Container>\r\n//       </Form>\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\n// export default MakeReservation;\r\n"],"sourceRoot":""}